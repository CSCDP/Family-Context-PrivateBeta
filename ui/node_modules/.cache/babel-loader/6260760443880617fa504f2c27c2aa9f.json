{"ast":null,"code":"import _regeneratorRuntime from \"/Users/matthewpugh/Projects/family-context-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/matthewpugh/Projects/family-context-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/matthewpugh/Projects/family-context-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/matthewpugh/Projects/family-context-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport LoginStatus from \"../models/LoginStatus\";\n\nvar ApiClient = /*#__PURE__*/function () {\n  function ApiClient(baseUrl, authenticationCallback) {\n    _classCallCheck(this, ApiClient);\n\n    this.baseUrl = void 0;\n    this.authenticationCallback = void 0;\n    this.baseUrl = baseUrl;\n    this.authenticationCallback = authenticationCallback;\n  }\n\n  _createClass(ApiClient, [{\n    key: \"setBaseUrl\",\n    value: function setBaseUrl(url) {\n      this.baseUrl = url;\n    }\n    /*\n     * The login method cannot use the 'fetch' api because it does not allow cross origin requests to set\n     * cookies. We use the XMLHttpRequest for logging in to get round this limitation.\n     */\n\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(loginDetails) {\n        var _this = this;\n\n        var loginPath;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                loginPath = \"/auth/login\";\n                return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  var request = new XMLHttpRequest();\n                  request.open('POST', \"\".concat(_this.baseUrl).concat(loginPath), true);\n                  request.withCredentials = true;\n                  request.setRequestHeader('Content-Type', 'application/json');\n                  request.setRequestHeader('Cache-Control', 'no-cache');\n\n                  request.onload = function (event) {\n                    switch (request.status) {\n                      case 200:\n                        _this.authenticationCallback(LoginStatus.Authorized);\n\n                        resolve(LoginStatus.Authorized);\n                        break;\n\n                      case 401:\n                        _this.authenticationCallback(LoginStatus.Unauthenticated);\n\n                        resolve(LoginStatus.Unauthenticated);\n                        break;\n\n                      case 403:\n                        _this.authenticationCallback(LoginStatus.Forbidden);\n\n                        resolve(LoginStatus.Forbidden);\n                        break;\n\n                      default:\n                        _this.authenticationCallback(LoginStatus.Unknown);\n\n                        resolve(LoginStatus.Unknown);\n                    }\n                  };\n\n                  request.onerror = function () {\n                    reject();\n                  };\n\n                  request.send(JSON.stringify(loginDetails));\n                }));\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n  }, {\n    key: \"logout\",\n    value: function () {\n      var _logout = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var logoutPath, response, success;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                logoutPath = \"/auth/logout\";\n                _context2.next = 3;\n                return this.postJsonRequest(logoutPath, \"\");\n\n              case 3:\n                response = _context2.sent;\n                success = response.ok || response.status === 401;\n\n                if (success) {\n                  this.authenticationCallback(LoginStatus.Unauthenticated);\n                }\n\n                return _context2.abrupt(\"return\", success);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function logout() {\n        return _logout.apply(this, arguments);\n      }\n\n      return logout;\n    }()\n  }, {\n    key: \"isAuthenticated\",\n    value: function () {\n      var _isAuthenticated = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var statusPath, response;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                statusPath = \"/auth/status\";\n                _context3.prev = 1;\n                _context3.next = 4;\n                return this.getRequest(statusPath);\n\n              case 4:\n                response = _context3.sent;\n                return _context3.abrupt(\"return\", response.status === 200);\n\n              case 8:\n                _context3.prev = 8;\n                _context3.t0 = _context3[\"catch\"](1);\n                return _context3.abrupt(\"return\", false);\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[1, 8]]);\n      }));\n\n      function isAuthenticated() {\n        return _isAuthenticated.apply(this, arguments);\n      }\n\n      return isAuthenticated;\n    }()\n  }, {\n    key: \"getPerson\",\n    value: function () {\n      var _getPerson = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(personId) {\n        var idType,\n            personDetailsPath,\n            response,\n            result,\n            _args4 = arguments;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                idType = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : \"fc\";\n                personDetailsPath = \"/person/detail/\".concat(idType, \":\").concat(personId);\n                _context4.next = 4;\n                return this.getRequest(personDetailsPath);\n\n              case 4:\n                response = _context4.sent;\n                result = {\n                  statusCode: response.status,\n                  success: response.ok\n                };\n\n                if (!response.ok) {\n                  _context4.next = 10;\n                  break;\n                }\n\n                _context4.next = 9;\n                return response.json();\n\n              case 9:\n                result.data = _context4.sent;\n\n              case 10:\n                return _context4.abrupt(\"return\", result);\n\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getPerson(_x2) {\n        return _getPerson.apply(this, arguments);\n      }\n\n      return getPerson;\n    }()\n  }, {\n    key: \"getServiceSummaries\",\n    value: function () {\n      var _getServiceSummaries = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(personId) {\n        var personDetailsPath, response;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                personDetailsPath = \"/person/detail/\" + personId + \"/service\";\n                _context5.next = 3;\n                return this.getRequest(personDetailsPath);\n\n              case 3:\n                response = _context5.sent;\n                _context5.t0 = response.status;\n                _context5.t1 = response.ok;\n                _context5.next = 8;\n                return response.json();\n\n              case 8:\n                _context5.t2 = _context5.sent;\n                return _context5.abrupt(\"return\", {\n                  statusCode: _context5.t0,\n                  success: _context5.t1,\n                  data: _context5.t2\n                });\n\n              case 10:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function getServiceSummaries(_x3) {\n        return _getServiceSummaries.apply(this, arguments);\n      }\n\n      return getServiceSummaries;\n    }()\n  }, {\n    key: \"getServiceDetail\",\n    value: function () {\n      var _getServiceDetail = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(personId, serviceId) {\n        var serviceDetailsPath, response, responseObject, stringy, jsonString;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                serviceDetailsPath = \"/person/detail/\" + personId + \"/service/\" + serviceId;\n                _context6.next = 3;\n                return this.getRequest(serviceDetailsPath);\n\n              case 3:\n                response = _context6.sent;\n                responseObject = {\n                  \"data\": {\n                    \"contact\": {\n                      \"email\": \"officer@police.uk\",\n                      \"name\": \"P C Jones\",\n                      \"phone\": \"999\"\n                    },\n                    \"offences\": [{\n                      \"dateOfOffence\": \"2015-10-01\",\n                      \"natureOfInvolvement\": \"Offender\",\n                      \"typeOfOffence\": \"AntiSocial Behaviour\"\n                    }, {\n                      \"dateOfOffence\": \"2016-10-01\",\n                      \"natureOfInvolvement\": \"Offender\",\n                      \"typeOfOffence\": \"Possession of drugs\"\n                    }, {\n                      \"dateOfOffence\": \"2017-10-01\",\n                      \"natureOfInvolvement\": \"Offender\",\n                      \"typeOfOffence\": \"AntiSocial Behaviour\"\n                    }],\n                    \"policeStation\": \"Area A\",\n                    \"serviceInvolvement\": \"yes\"\n                  },\n                  \"schema\": {\n                    \"properties\": {\n                      \"contact\": {\n                        \"description\": \"Generic object describing the contact information\",\n                        \"properties\": {\n                          \"email\": {\n                            \"type\": \"string\",\n                            \"x-item-seq\": 2\n                          },\n                          \"name\": {\n                            \"type\": \"string\",\n                            \"x-item-seq\": 1\n                          },\n                          \"phone\": {\n                            \"type\": \"string\",\n                            \"x-item-seq\": 3\n                          },\n                          \"role\": {\n                            \"type\": \"string\",\n                            \"x-item-seq\": 4\n                          }\n                        },\n                        \"type\": \"object\",\n                        \"x-item-seq\": 2,\n                        \"x-ref\": \"http://www.sfdl.org.uk/schemas/fc/0.0.1#Contact\"\n                      },\n                      \"offences\": {\n                        \"items\": {\n                          \"properties\": {\n                            \"dateOfOffence\": {\n                              \"format\": \"date\",\n                              \"type\": \"string\",\n                              \"x-item-seq\": 1\n                            },\n                            \"natureOfInvolvement\": {\n                              \"type\": \"string\",\n                              \"x-item-seq\": 3\n                            },\n                            \"typeOfOffence\": {\n                              \"type\": \"string\",\n                              \"x-item-seq\": 2\n                            }\n                          },\n                          \"title\": \"Offence\",\n                          \"type\": \"object\",\n                          \"x-ref\": \"http://www.sfdl.org.uk/schemas/fc/0.0.1#OffenceSummary\"\n                        },\n                        \"title\": \"Recent offence\",\n                        \"type\": \"array\",\n                        \"x-item-seq\": 4\n                      },\n                      \"policeStation\": {\n                        \"title\": \"Police station\",\n                        \"type\": \"string\",\n                        \"x-item-seq\": 3\n                      },\n                      \"serviceInvolvement\": {\n                        \"pattern\": \"[yes|no]\",\n                        \"title\": \"Service involvement\",\n                        \"type\": \"string\",\n                        \"x-item-seq\": 1\n                      }\n                    },\n                    \"type\": \"object\",\n                    \"x-ref\": \"http://www.sfdl.org.uk/schemas/fc/0.0.1#Police\"\n                  },\n                  \"summary\": {\n                    \"coverageEndDate\": \"2020-01-06\",\n                    \"coverageStartDate\": \"2000-01-01\",\n                    \"id\": \"Police\",\n                    \"lastSynchronised\": \"2020-01-06T10:00\",\n                    \"title\": \"Police\"\n                  }\n                };\n                stringy = JSON.stringify(responseObject);\n                _context6.next = 8;\n                return response.text();\n\n              case 8:\n                jsonString = _context6.sent.replace(/x-ref/g, \"xRef\").replace(/x-item-seq/g, \"xItemSeq\");\n                return _context6.abrupt(\"return\", {\n                  statusCode: response.status,\n                  success: response.ok,\n                  data: JSON.parse(jsonString)\n                });\n\n              case 10:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function getServiceDetail(_x4, _x5) {\n        return _getServiceDetail.apply(this, arguments);\n      }\n\n      return getServiceDetail;\n    }()\n  }, {\n    key: \"isSearchApiSupported\",\n    value: function () {\n      var _isSearchApiSupported = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        var searchPath, response;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                searchPath = \"/search/person\";\n                _context7.next = 3;\n                return this.headRequest(searchPath);\n\n              case 3:\n                response = _context7.sent;\n                return _context7.abrupt(\"return\", {\n                  statusCode: response.status,\n                  success: response.ok\n                });\n\n              case 5:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function isSearchApiSupported() {\n        return _isSearchApiSupported.apply(this, arguments);\n      }\n\n      return isSearchApiSupported;\n    }()\n  }, {\n    key: \"isRelatedIndividualsSupported\",\n    value: function () {\n      var _isRelatedIndividualsSupported = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(personId) {\n        var relatedIndividualsPath, response;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                relatedIndividualsPath = \"/person/related/\" + personId;\n                _context8.next = 3;\n                return this.headRequest(relatedIndividualsPath);\n\n              case 3:\n                response = _context8.sent;\n                return _context8.abrupt(\"return\", {\n                  statusCode: response.status,\n                  success: response.ok || response.status === 501,\n                  data: response.status === 200\n                });\n\n              case 5:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function isRelatedIndividualsSupported(_x6) {\n        return _isRelatedIndividualsSupported.apply(this, arguments);\n      }\n\n      return isRelatedIndividualsSupported;\n    }()\n  }, {\n    key: \"getRelatedIndividuals\",\n    value: function () {\n      var _getRelatedIndividuals = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(personId) {\n        var relatedIndividualsPath, response;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                relatedIndividualsPath = \"/person/related/\" + personId;\n                _context9.next = 3;\n                return this.headRequest(relatedIndividualsPath);\n\n              case 3:\n                response = _context9.sent;\n                _context9.t0 = response.status;\n                _context9.t1 = response.ok;\n                _context9.next = 8;\n                return response.json();\n\n              case 8:\n                _context9.t2 = _context9.sent;\n                return _context9.abrupt(\"return\", {\n                  statusCode: _context9.t0,\n                  success: _context9.t1,\n                  data: _context9.t2\n                });\n\n              case 10:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function getRelatedIndividuals(_x7) {\n        return _getRelatedIndividuals.apply(this, arguments);\n      }\n\n      return getRelatedIndividuals;\n    }()\n  }, {\n    key: \"searchPerson\",\n    value: function () {\n      var _searchPerson = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(search) {\n        var searchPath, response;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                searchPath = \"/search/person\";\n                _context10.next = 3;\n                return this.postJsonRequest(searchPath, JSON.stringify(search));\n\n              case 3:\n                response = _context10.sent;\n                _context10.t0 = response.status;\n                _context10.t1 = response.ok;\n                _context10.next = 8;\n                return response.json();\n\n              case 8:\n                _context10.t2 = _context10.sent;\n                return _context10.abrupt(\"return\", {\n                  statusCode: _context10.t0,\n                  success: _context10.t1,\n                  data: _context10.t2\n                });\n\n              case 10:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function searchPerson(_x8) {\n        return _searchPerson.apply(this, arguments);\n      }\n\n      return searchPerson;\n    }()\n  }, {\n    key: \"postJsonRequest\",\n    value: function () {\n      var _postJsonRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(relativePath, body) {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                return _context11.abrupt(\"return\", fetch(\"\".concat(this.baseUrl).concat(relativePath), {\n                  method: \"POST\",\n                  credentials: 'include',\n                  body: body,\n                  headers: {\n                    'Content-Type': 'application/json'\n                  }\n                }).then(function (response) {\n                  if (response.status === 401) {\n                    _this2.authenticationCallback(LoginStatus.Unauthenticated);\n                  } else if (response.status === 403) {\n                    _this2.authenticationCallback(LoginStatus.Forbidden);\n                  }\n\n                  return response;\n                }));\n\n              case 1:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function postJsonRequest(_x9, _x10) {\n        return _postJsonRequest.apply(this, arguments);\n      }\n\n      return postJsonRequest;\n    }()\n  }, {\n    key: \"getRequest\",\n    value: function () {\n      var _getRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(relativePath) {\n        var _this3 = this;\n\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                return _context12.abrupt(\"return\", fetch(\"\".concat(this.baseUrl).concat(relativePath), {\n                  credentials: 'include'\n                }).then(function (response) {\n                  if (response.status === 401) {\n                    _this3.authenticationCallback(LoginStatus.Unauthenticated);\n                  } else if (response.status === 403) {\n                    _this3.authenticationCallback(LoginStatus.Forbidden);\n                  }\n\n                  return response;\n                }));\n\n              case 1:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function getRequest(_x11) {\n        return _getRequest.apply(this, arguments);\n      }\n\n      return getRequest;\n    }()\n  }, {\n    key: \"headRequest\",\n    value: function () {\n      var _headRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(relativePath) {\n        var _this4 = this;\n\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                return _context13.abrupt(\"return\", fetch(\"\".concat(this.baseUrl).concat(relativePath), {\n                  credentials: 'include',\n                  method: 'HEAD'\n                }).then(function (response) {\n                  if (response.status === 401) {\n                    _this4.authenticationCallback(LoginStatus.Unauthenticated);\n                  } else if (response.status === 403) {\n                    _this4.authenticationCallback(LoginStatus.Forbidden);\n                  }\n\n                  return response;\n                }));\n\n              case 1:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function headRequest(_x12) {\n        return _headRequest.apply(this, arguments);\n      }\n\n      return headRequest;\n    }()\n  }]);\n\n  return ApiClient;\n}();\n\nexport default ApiClient;","map":{"version":3,"sources":["/Users/matthewpugh/Projects/family-context-ui/src/clients/ApiClient.tsx"],"names":["LoginStatus","ApiClient","baseUrl","authenticationCallback","url","loginDetails","loginPath","Promise","resolve","reject","request","XMLHttpRequest","open","withCredentials","setRequestHeader","onload","event","status","Authorized","Unauthenticated","Forbidden","Unknown","onerror","send","JSON","stringify","logoutPath","postJsonRequest","response","success","ok","statusPath","getRequest","personId","idType","personDetailsPath","result","statusCode","json","data","serviceId","serviceDetailsPath","responseObject","stringy","text","jsonString","replace","parse","searchPath","headRequest","relatedIndividualsPath","search","relativePath","body","fetch","method","credentials","headers","then"],"mappings":"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","sourcesContent":["import LoginDetails from \"../models/LoginDetails\";\nimport PersonDetails from \"../models/PersonDetails\";\nimport ServiceInvolvementDetailsSummary from \"../models/ServiceInvolvementDetailsSummary\";\nimport ServiceDetail from \"../models/ServiceDetail\";\nimport SearchDetails from \"../models/SearchDetails\";\nimport PersonRelationshipDetails from \"../models/PersonRelationshipDetails\";\nimport SearchResponse from \"../models/SearchResponse\";\nimport LoginStatus from \"../models/LoginStatus\";\n\nclass ApiClient {\n  private baseUrl: string\n  private authenticationCallback: (newStatus: LoginStatus) => void\n\n  constructor(baseUrl: string, authenticationCallback: (newStatus: LoginStatus) => void) {\n    this.baseUrl = baseUrl;\n    this.authenticationCallback = authenticationCallback;\n  }\n\n  setBaseUrl(url: string): void {\n    this.baseUrl = url;\n  }\n\n  /*\n   * The login method cannot use the 'fetch' api because it does not allow cross origin requests to set\n   * cookies. We use the XMLHttpRequest for logging in to get round this limitation.\n   */\n  async login(loginDetails: LoginDetails): Promise<LoginStatus> {\n    var loginPath = \"/auth/login\"\n\n    return new Promise((resolve, reject) => {\n      var request = new XMLHttpRequest();\n\n      request.open('POST', `${this.baseUrl}${loginPath}`, true);\n\n      request.withCredentials = true;\n      request.setRequestHeader('Content-Type', 'application/json');\n      request.setRequestHeader('Cache-Control', 'no-cache')\n\n      request.onload = (event) => {\n        switch (request.status) {\n          case 200:\n            this.authenticationCallback(LoginStatus.Authorized);\n            resolve(LoginStatus.Authorized);\n            break;\n          \n          case 401:\n            this.authenticationCallback(LoginStatus.Unauthenticated);\n            resolve(LoginStatus.Unauthenticated);\n            break;\n\n          case 403:\n            this.authenticationCallback(LoginStatus.Forbidden);\n            resolve(LoginStatus.Forbidden);\n            break;\n          \n          default:\n            this.authenticationCallback(LoginStatus.Unknown);\n            resolve(LoginStatus.Unknown);\n        }\n      }\n\n      request.onerror = () => {\n        reject()\n      }\n\n      request.send(JSON.stringify(loginDetails))\n    })\n  }\n\n  async logout(): Promise<boolean> {\n    var logoutPath = \"/auth/logout\"\n    var response = await this.postJsonRequest(logoutPath, \"\");\n\n    var success = response.ok || response.status === 401;\n\n    if (success) {\n      this.authenticationCallback(LoginStatus.Unauthenticated)\n    }\n\n    return success\n  }\n\n  async isAuthenticated(): Promise<boolean> {\n    var statusPath = \"/auth/status\"\n    try {\n      var response = await this.getRequest(statusPath)\n      return (response.status === 200)\n    } catch {\n      return false\n    }\n  }\n\n  async getPerson(personId: string, idType: string = \"fc\"): Promise<RequestResult<PersonDetails>> {\n    let personDetailsPath = `/person/detail/${idType}:${personId}`;\n    let response = await this.getRequest(personDetailsPath);\n\n    let result: RequestResult<PersonDetails> = {\n      statusCode: response.status,\n      success: response.ok\n    }\n\n    if (response.ok) {\n      result.data = await response.json();\n    }\n\n    return result;\n\n  }\n\n  async getServiceSummaries(personId: string): Promise<RequestResult<ServiceInvolvementDetailsSummary[]>> {\n    let personDetailsPath = \"/person/detail/\" + personId + \"/service\";\n    let response = await this.getRequest(personDetailsPath);\n\n    return {\n      statusCode: response.status,\n      success: response.ok,\n      data: await response.json()\n    };\n  }\n\n  async getServiceDetail(personId: string, serviceId: string): Promise<RequestResult<ServiceDetail>> {\n    let serviceDetailsPath = \"/person/detail/\" + personId + \"/service/\" + serviceId;\n    let response = await this.getRequest(serviceDetailsPath);\n    let responseObject = {\n      \"data\": {\n        \"contact\": {\n          \"email\": \"officer@police.uk\",\n          \"name\": \"P C Jones\",\n          \"phone\": \"999\"\n        },\n        \"offences\": [\n          {\n            \"dateOfOffence\": \"2015-10-01\",\n            \"natureOfInvolvement\": \"Offender\",\n            \"typeOfOffence\": \"AntiSocial Behaviour\"\n          },\n          {\n            \"dateOfOffence\": \"2016-10-01\",\n            \"natureOfInvolvement\": \"Offender\",\n            \"typeOfOffence\": \"Possession of drugs\"\n          },\n          {\n            \"dateOfOffence\": \"2017-10-01\",\n            \"natureOfInvolvement\": \"Offender\",\n            \"typeOfOffence\": \"AntiSocial Behaviour\"\n          }\n        ],\n        \"policeStation\": \"Area A\",\n        \"serviceInvolvement\": \"yes\"\n      },\n      \"schema\": {\n        \"properties\": {\n          \"contact\": {\n            \"description\": \"Generic object describing the contact information\",\n            \"properties\": {\n              \"email\": {\n                \"type\": \"string\",\n                \"x-item-seq\": 2\n              },\n              \"name\": {\n                \"type\": \"string\",\n                \"x-item-seq\": 1\n              },\n              \"phone\": {\n                \"type\": \"string\",\n                \"x-item-seq\": 3\n              },\n              \"role\": {\n                \"type\": \"string\",\n                \"x-item-seq\": 4\n              }\n            },\n            \"type\": \"object\",\n            \"x-item-seq\": 2,\n            \"x-ref\": \"http://www.sfdl.org.uk/schemas/fc/0.0.1#Contact\"\n          },\n          \"offences\": {\n            \"items\": {\n              \"properties\": {\n                \"dateOfOffence\": {\n                  \"format\": \"date\",\n                  \"type\": \"string\",\n                  \"x-item-seq\": 1\n                },\n                \"natureOfInvolvement\": {\n                  \"type\": \"string\",\n                  \"x-item-seq\": 3\n                },\n                \"typeOfOffence\": {\n                  \"type\": \"string\",\n                  \"x-item-seq\": 2\n                }\n              },\n              \"title\": \"Offence\",\n              \"type\": \"object\",\n              \"x-ref\": \"http://www.sfdl.org.uk/schemas/fc/0.0.1#OffenceSummary\"\n            },\n            \"title\": \"Recent offence\",\n            \"type\": \"array\",\n            \"x-item-seq\": 4\n          },\n          \"policeStation\": {\n            \"title\": \"Police station\",\n            \"type\": \"string\",\n            \"x-item-seq\": 3\n          },\n          \"serviceInvolvement\": {\n            \"pattern\": \"[yes|no]\",\n            \"title\": \"Service involvement\",\n            \"type\": \"string\",\n            \"x-item-seq\": 1\n          }\n        },\n        \"type\": \"object\",\n        \"x-ref\": \"http://www.sfdl.org.uk/schemas/fc/0.0.1#Police\"\n      },\n      \"summary\": {\n        \"coverageEndDate\": \"2020-01-06\",\n        \"coverageStartDate\": \"2000-01-01\",\n        \"id\": \"Police\",\n        \"lastSynchronised\": \"2020-01-06T10:00\",\n        \"title\": \"Police\"\n      }\n    }\n    let stringy = JSON.stringify(responseObject);\n    let jsonString = (await response.text()).replace(/x-ref/g, \"xRef\").replace(/x-item-seq/g, \"xItemSeq\");\n\n    return {\n      statusCode: response.status,\n      success: response.ok,\n      data: JSON.parse(jsonString)\n    };\n  }\n\n  async isSearchApiSupported(): Promise<RequestResult<boolean>> {\n    let searchPath = \"/search/person\";\n    let response = await this.headRequest(searchPath)\n\n    return {\n        statusCode: response.status,\n        success: response.ok\n    }\n}\n\n  async isRelatedIndividualsSupported(personId: string): Promise<RequestResult<boolean>> {\n    let relatedIndividualsPath = \"/person/related/\" + personId;\n    let response = await this.headRequest(relatedIndividualsPath);\n\n    return {\n        statusCode: response.status,\n        success: response.ok || response.status === 501,\n        data: response.status === 200,\n    }\n}\n\nasync getRelatedIndividuals(personId: string): Promise<RequestResult<PersonRelationshipDetails[]>> {\n    let relatedIndividualsPath = \"/person/related/\" + personId;\n    let response = await this.headRequest(relatedIndividualsPath);\n\n    return {\n        statusCode: response.status,\n        success: response.ok,\n        data: await response.json()\n    }\n}\n\n  async searchPerson(search: SearchDetails): Promise<RequestResult<SearchResponse>> {\n    let searchPath = \"/search/person\";\n    let response = await this.postJsonRequest(searchPath, JSON.stringify(search))\n\n    return {\n      statusCode: response.status,\n      success: response.ok,\n      data: await response.json()\n    }\n  }\n\n  async postJsonRequest(relativePath: string, body: string): Promise<Response> {\n    return fetch(`${this.baseUrl}${relativePath}`, {\n      method: \"POST\",\n      credentials: 'include',\n      body: body,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (response.status === 401) {\n        this.authenticationCallback(LoginStatus.Unauthenticated);\n      } else if (response.status === 403) {\n        this.authenticationCallback(LoginStatus.Forbidden);\n      }\n      return response;\n    });\n  }\n\n  async getRequest(relativePath: string): Promise<Response> {\n    return fetch(`${this.baseUrl}${relativePath}`, {\n      credentials: 'include'\n    }).then(response => {\n      if (response.status === 401) {\n        this.authenticationCallback(LoginStatus.Unauthenticated);\n      } else if (response.status === 403) {\n        this.authenticationCallback(LoginStatus.Forbidden);\n      }\n      return response;\n    });\n  }\n\n    async headRequest(relativePath: string): Promise<Response> {\n        return fetch(`${this.baseUrl}${relativePath}`, {\n            credentials: 'include',\n            method: 'HEAD'\n        }).then(response =>\n            {\n                if (response.status === 401)\n                {\n                  this.authenticationCallback(LoginStatus.Unauthenticated);\n                } else if (response.status === 403) {\n                  this.authenticationCallback(LoginStatus.Forbidden);\n                }\n                return response;\n            });\n    }\n}\n\nexport interface RequestResult<T> {\n  statusCode: number,\n  data?: T,\n  success: boolean,\n  errorMessage?: string\n}\n\nexport default ApiClient"]},"metadata":{},"sourceType":"module"}