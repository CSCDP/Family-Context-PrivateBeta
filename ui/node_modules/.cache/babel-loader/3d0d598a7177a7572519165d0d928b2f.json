{"ast":null,"code":"var _jsxFileName = \"/Users/matthewpugh/Projects/family-context-ui/src/components/Pagination/PaginationButtons.tsx\";\nimport React from 'react';\nimport './Pagination.css';\nimport PaginationItem from './PaginationItem';\n\nvar PaginationButtons = function PaginationButtons(props) {\n  var items = [];\n\n  if (props.paginationInfo.pageNumber > 1) {\n    items.push(React.createElement(FirstButton, {\n      navigatePage: props.navigatePage,\n      page: 1,\n      key: \"First button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }));\n    items.push(React.createElement(PreviousButton, {\n      navigatePage: props.navigatePage,\n      page: props.paginationInfo.pageNumber - 1,\n      key: \"Previous button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }));\n  }\n\n  var _loop = function _loop(_page) {\n    items.push(React.createElement(PaginationItem, {\n      action: function action() {\n        props.navigatePage(_page);\n      },\n      label: \"Page \".concat(_page),\n      key: _page,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, _page));\n  };\n\n  for (var _page = Math.max(props.paginationInfo.pageNumber - 2, 1); _page < props.paginationInfo.pageNumber; _page++) {\n    _loop(_page);\n  }\n\n  items.push(React.createElement(PaginationItem, {\n    action: function action() {},\n    label: \"Page \".concat(props.paginationInfo.pageNumber, \", current\"),\n    current: true,\n    key: \"current\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, props.paginationInfo.pageNumber));\n  var maxPage = Math.ceil(props.paginationInfo.totalResults / props.paginationInfo.resultsPerPage);\n\n  var _loop2 = function _loop2(_page2) {\n    items.push(React.createElement(PaginationItem, {\n      action: function action() {\n        props.navigatePage(_page2);\n      },\n      label: \"Page \".concat(_page2),\n      key: _page2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, _page2));\n  };\n\n  for (var _page2 = props.paginationInfo.pageNumber + 1; _page2 <= Math.min(props.paginationInfo.pageNumber + 2, maxPage); _page2++) {\n    _loop2(_page2);\n  }\n\n  if (props.paginationInfo.pageNumber < maxPage) {\n    items.push(React.createElement(NextButton, {\n      navigatePage: props.navigatePage,\n      page: props.paginationInfo.pageNumber + 1,\n      key: \"Next button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n    items.push(React.createElement(LastButton, {\n      navigatePage: props.navigatePage,\n      page: maxPage,\n      key: \"Last button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(\"ol\", {\n    className: \"pagination\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, items);\n};\n\nvar FirstButton = function FirstButton(props) {\n  return React.createElement(PaginationItem, {\n    action: function action() {\n      props.navigatePage(props.page);\n    },\n    label: \"First page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    \"aria-hidden\": \"true\",\n    role: \"presentation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"\\xAB\"), \" First\");\n};\n\nvar PreviousButton = function PreviousButton(props) {\n  return React.createElement(PaginationItem, {\n    action: function action() {\n      props.navigatePage(props.page);\n    },\n    label: \"Previous page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    \"aria-hidden\": \"true\",\n    role: \"presentation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"\\u2039\"), \" Previous\");\n};\n\nvar NextButton = function NextButton(props) {\n  return React.createElement(PaginationItem, {\n    action: function action() {\n      props.navigatePage(props.page);\n    },\n    label: \"Next page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Next \", React.createElement(\"span\", {\n    \"aria-hidden\": \"true\",\n    role: \"presentation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"\\u203A\"));\n};\n\nvar LastButton = function LastButton(props) {\n  return React.createElement(PaginationItem, {\n    action: function action() {\n      props.navigatePage(props.page);\n    },\n    label: \"Last page\",\n    key: \"Last button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Last \", React.createElement(\"span\", {\n    \"aria-hidden\": \"true\",\n    role: \"presentation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"\\xBB\"));\n};\n\nexport default PaginationButtons;","map":{"version":3,"sources":["/Users/matthewpugh/Projects/family-context-ui/src/components/Pagination/PaginationButtons.tsx"],"names":["React","PaginationItem","PaginationButtons","props","items","paginationInfo","pageNumber","push","navigatePage","page","Math","max","maxPage","ceil","totalResults","resultsPerPage","min","FirstButton","PreviousButton","NextButton","LastButton"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PaginationInfo from '../../models/PaginationInfo'\nimport './Pagination.css'\nimport PaginationItem from './PaginationItem'\n\ntype PaginationButtonsProps = {\n    paginationInfo: PaginationInfo,\n    navigatePage: (page: number) => void\n}\n\nconst PaginationButtons: React.FC<PaginationButtonsProps> = (props: PaginationButtonsProps) => {\n    var items: React.ReactNode[] = []\n\n    if (props.paginationInfo.pageNumber > 1) {\n        items.push(<FirstButton navigatePage={props.navigatePage} page={1} key={\"First button\"}/>)\n        items.push(<PreviousButton navigatePage={props.navigatePage} page={props.paginationInfo.pageNumber - 1} key={\"Previous button\"}/>)\n    }\n\n    for (let page = Math.max(props.paginationInfo.pageNumber - 2, 1); page < props.paginationInfo.pageNumber; page++) {\n        items.push(\n            <PaginationItem action={() => {props.navigatePage(page)}} label={`Page ${page}`} key={page}>\n                {page}\n            </PaginationItem>\n        )\n    }\n\n    items.push(\n        <PaginationItem action={() => {}} label={`Page ${props.paginationInfo.pageNumber}, current`} current={true} key={\"current\"}>\n            {props.paginationInfo.pageNumber}\n        </PaginationItem>\n    )\n\n    var maxPage = Math.ceil(props.paginationInfo.totalResults / props.paginationInfo.resultsPerPage)\n    \n    for (let page = props.paginationInfo.pageNumber + 1; page <= Math.min(props.paginationInfo.pageNumber + 2, maxPage); page++) {\n        items.push(\n            <PaginationItem action={() => {props.navigatePage(page)}} label={`Page ${page}`} key={page}>\n                {page}\n            </PaginationItem>)\n    }\n\n    if (props.paginationInfo.pageNumber < maxPage) {\n        items.push(<NextButton navigatePage={props.navigatePage} page={props.paginationInfo.pageNumber + 1} key={\"Next button\"}/>)\n        items.push(<LastButton navigatePage={props.navigatePage} page={maxPage} key={\"Last button\"}/>)\n    }\n\n    return (\n        <ol className=\"pagination\">\n            {items}\n        </ol>\n    )\n}\n\ntype ButtonProps = {\n    navigatePage: (page: number) => void,\n    page: number\n}\n\nconst FirstButton: React.FC<ButtonProps> = (props: ButtonProps) => {\n    return (\n        <PaginationItem action={() => {props.navigatePage(props.page)}} label={`First page`}>\n            <span aria-hidden=\"true\" role=\"presentation\">&laquo;</span> First\n        </PaginationItem>\n    )\n}\n\nconst PreviousButton: React.FC<ButtonProps> = (props: ButtonProps) => {\n    return (\n        <PaginationItem action={() => {props.navigatePage(props.page)}} label={`Previous page`}>\n            <span aria-hidden=\"true\" role=\"presentation\">&lsaquo;</span> Previous\n        </PaginationItem>\n    )\n}\n\nconst NextButton: React.FC<ButtonProps> = (props: ButtonProps) => {\n    return (\n        <PaginationItem action={() => {props.navigatePage(props.page)}} label={`Next page`}>\n            Next <span aria-hidden=\"true\" role=\"presentation\">&rsaquo;</span>\n        </PaginationItem>\n    )\n}\n\nconst LastButton: React.FC<ButtonProps> = (props: ButtonProps) => {\n    return (\n        <PaginationItem action={() => {props.navigatePage(props.page)}} label={`Last page`} key={\"Last button\"}>\n            Last <span aria-hidden=\"true\" role=\"presentation\">&raquo;</span>\n        </PaginationItem>\n    )\n}\n\n\n\n\nexport default PaginationButtons"]},"metadata":{},"sourceType":"module"}