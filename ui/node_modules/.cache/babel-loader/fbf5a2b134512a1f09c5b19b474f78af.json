{"ast":null,"code":"export function formatShortDateOrString(maybeDate) {\n  if (!maybeDate) {\n    return \"\";\n  }\n\n  var date = new Date(maybeDate);\n\n  if (date.getDate()) {\n    return date.toLocaleDateString('en-GB');\n  } else {\n    return maybeDate.toString();\n  }\n}\nexport function formatLongDateOrString(maybeDate) {\n  if (!maybeDate) {\n    return \"\";\n  }\n\n  var date = new Date(maybeDate);\n\n  if (date.getDate()) {\n    return \"\".concat(date.toLocaleDateString('en-GB'), \" at \").concat(date.getHours().toString().padStart(2, '0'), \":\").concat(date.getMinutes().toString().padStart(2, '0'));\n  } else {\n    return maybeDate.toString();\n  }\n}\nexport function formatShortAddress(address) {\n  var firstLine = address.split('\\n')[0];\n\n  if (firstLine) {\n    return \"\".concat(firstLine, \"...\");\n  } else {\n    return \"\";\n  }\n}\nexport function formatAgeInYearsFromStringOrDate(dateOfBirth) {\n  if (!dateOfBirth) {\n    return \"- yrs\";\n  } else {\n    var birthDate = new Date(dateOfBirth);\n    return \"\".concat(getAgeInYears(birthDate), \" yrs\");\n  }\n}\n\nfunction getAgeInYears(dateOfBirth) {\n  var dateNow = new Date();\n  var years = dateNow.getFullYear() - dateOfBirth.getFullYear();\n  var hasBirthdayHappenedThisYear = dateOfBirth.setFullYear(dateNow.getFullYear()) < Number(dateNow);\n  years -= hasBirthdayHappenedThisYear ? 0 : 1;\n  return years;\n}","map":{"version":3,"sources":["/Users/matthewpugh/Projects/family-context-ui/src/tools/FormattingTools.tsx"],"names":["formatShortDateOrString","maybeDate","date","Date","getDate","toLocaleDateString","toString","formatLongDateOrString","getHours","padStart","getMinutes","formatShortAddress","address","firstLine","split","formatAgeInYearsFromStringOrDate","dateOfBirth","birthDate","getAgeInYears","dateNow","years","getFullYear","hasBirthdayHappenedThisYear","setFullYear","Number"],"mappings":"AAAA,OAAO,SAASA,uBAAT,CAAiCC,SAAjC,EAAmE;AACtE,MAAI,CAACA,SAAL,EAAgB;AACZ,WAAO,EAAP;AACH;;AAED,MAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASF,SAAT,CAAX;;AACA,MAAKC,IAAD,CAAeE,OAAf,EAAJ,EAA8B;AAC1B,WAAOF,IAAI,CAACG,kBAAL,CAAwB,OAAxB,CAAP;AACH,GAFD,MAGK;AACD,WAAOJ,SAAS,CAACK,QAAV,EAAP;AACH;AACJ;AAED,OAAO,SAASC,sBAAT,CAAgCN,SAAhC,EAAkE;AACrE,MAAI,CAACA,SAAL,EAAgB;AACZ,WAAO,EAAP;AACH;;AAED,MAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASF,SAAT,CAAX;;AACA,MAAKC,IAAD,CAAeE,OAAf,EAAJ,EAA8B;AAC1B,qBAAUF,IAAI,CAACG,kBAAL,CAAwB,OAAxB,CAAV,iBAAiDH,IAAI,CAACM,QAAL,GAAgBF,QAAhB,GAA2BG,QAA3B,CAAoC,CAApC,EAAuC,GAAvC,CAAjD,cAAgGP,IAAI,CAACQ,UAAL,GAAkBJ,QAAlB,GAA6BG,QAA7B,CAAsC,CAAtC,EAAyC,GAAzC,CAAhG;AACH,GAFD,MAGK;AACD,WAAOR,SAAS,CAACK,QAAV,EAAP;AACH;AACJ;AAED,OAAO,SAASK,kBAAT,CAA4BC,OAA5B,EAAqD;AACxD,MAAIC,SAAS,GAAGD,OAAO,CAACE,KAAR,CAAc,IAAd,EAAoB,CAApB,CAAhB;;AACA,MAAID,SAAJ,EAAe;AACX,qBAAUA,SAAV;AACH,GAFD,MAEO;AACH,WAAO,EAAP;AACH;AACJ;AAED,OAAO,SAASE,gCAAT,CAA0CC,WAA1C,EAA8E;AACjF,MAAI,CAACA,WAAL,EAAkB;AACd,WAAO,OAAP;AACH,GAFD,MAEO;AACH,QAAIC,SAAS,GAAG,IAAId,IAAJ,CAASa,WAAT,CAAhB;AAEA,qBAAUE,aAAa,CAACD,SAAD,CAAvB;AACH;AACJ;;AAED,SAASC,aAAT,CAAuBF,WAAvB,EAAkD;AAC9C,MAAIG,OAAO,GAAG,IAAIhB,IAAJ,EAAd;AACA,MAAIiB,KAAK,GAAGD,OAAO,CAACE,WAAR,KAAwBL,WAAW,CAACK,WAAZ,EAApC;AAEA,MAAIC,2BAA2B,GAAGN,WAAW,CAACO,WAAZ,CAAwBJ,OAAO,CAACE,WAAR,EAAxB,IAAiDG,MAAM,CAACL,OAAD,CAAzF;AACAC,EAAAA,KAAK,IAAIE,2BAA2B,GAAG,CAAH,GAAO,CAA3C;AAEA,SAAOF,KAAP;AACH","sourcesContent":["export function formatShortDateOrString(maybeDate: string | Date): string {\n    if (!maybeDate) {\n        return \"\"\n    }\n\n    let date = new Date(maybeDate);\n    if ((date as Date).getDate()) {\n        return date.toLocaleDateString('en-GB');\n    }\n    else {\n        return maybeDate.toString();\n    }\n}\n\nexport function formatLongDateOrString(maybeDate: string | Date): string {\n    if (!maybeDate) {\n        return \"\"\n    }\n\n    let date = new Date(maybeDate);\n    if ((date as Date).getDate()) {\n        return `${date.toLocaleDateString('en-GB')} at ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`;\n    }\n    else {\n        return maybeDate.toString();\n    }\n}\n\nexport function formatShortAddress(address: string): string {\n    var firstLine = address.split('\\n')[0]\n    if (firstLine) {\n        return `${firstLine}...` \n    } else {\n        return \"\"\n    }\n}\n\nexport function formatAgeInYearsFromStringOrDate(dateOfBirth: string | Date): string {\n    if (!dateOfBirth) {\n        return \"- yrs\"\n    } else {\n        var birthDate = new Date(dateOfBirth);\n\n        return `${getAgeInYears(birthDate)} yrs`;\n    }\n}\n\nfunction getAgeInYears(dateOfBirth: Date): number {\n    var dateNow = new Date();\n    var years = dateNow.getFullYear() - dateOfBirth.getFullYear()\n\n    var hasBirthdayHappenedThisYear = dateOfBirth.setFullYear(dateNow.getFullYear()) < Number(dateNow)\n    years -= hasBirthdayHappenedThisYear ? 0 : 1\n\n    return years\n}"]},"metadata":{},"sourceType":"module"}