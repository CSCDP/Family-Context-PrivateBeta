{"ast":null,"code":"import _objectSpread from \"/Users/matthewpugh/Projects/family-context-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/matthewpugh/Projects/family-context-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/matthewpugh/Projects/family-context-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/matthewpugh/Projects/family-context-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/matthewpugh/Projects/family-context-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/matthewpugh/Projects/family-context-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/matthewpugh/Projects/family-context-ui/src/components/SearchPage/InfoSearch.tsx\";\nimport React from \"react\";\nimport { TextInputGroup, DobInputGroup } from \"../InputGroups\";\nimport ErrorMessage from \"../ErrorMessage\";\nvar ErrorType;\n\n(function (ErrorType) {\n  ErrorType[\"Name\"] = \"Enter the first name and last name\";\n  ErrorType[\"Date\"] = \"Enter a real date of birth or leave it empty\";\n})(ErrorType || (ErrorType = {}));\n\nvar InfoSearch = /*#__PURE__*/function (_React$Component) {\n  _inherits(InfoSearch, _React$Component);\n\n  function InfoSearch(props) {\n    var _this;\n\n    _classCallCheck(this, InfoSearch);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InfoSearch).call(this, props));\n    _this.state = {\n      warningHidden: true,\n      errorType: null,\n      searchState: {\n        firstName: \"\",\n        familyName: \"\",\n        year: \"\",\n        month: \"\",\n        day: \"\"\n      }\n    };\n    return _this;\n  }\n\n  _createClass(InfoSearch, [{\n    key: \"search\",\n    value: function search(event) {\n      event.preventDefault();\n      var dobWarning = this.dobCheck();\n      var nameWarning = this.nameCheck();\n\n      if (dobWarning) {\n        this.setState(_objectSpread({}, this.state, {\n          warningHidden: false,\n          errorType: dobWarning\n        }));\n        return;\n      }\n\n      if (nameWarning) {\n        this.setState(_objectSpread({}, this.state, {\n          warningHidden: false,\n          errorType: nameWarning\n        }));\n        return;\n      }\n\n      this.searchForIndividual();\n    }\n  }, {\n    key: \"searchForIndividual\",\n    value: function searchForIndividual() {\n      if (this.state.searchState.day !== \"\" && this.state.searchState.month !== \"\" && this.state.searchState.year !== \"\") {\n        var dob = new Date(Date.UTC(parseInt(this.state.searchState.year), parseInt(this.state.searchState.month) - 1, parseInt(this.state.searchState.day)));\n        this.props.search({\n          firstName: this.state.searchState.firstName,\n          lastName: this.state.searchState.familyName,\n          dateOfBirth: dob.toISOString()\n        });\n      } else {\n        this.props.search({\n          firstName: this.state.searchState.firstName,\n          lastName: this.state.searchState.familyName\n        });\n      }\n    }\n  }, {\n    key: \"nameCheck\",\n    value: function nameCheck() {\n      if (this.state.searchState.firstName !== \"\" && this.state.searchState.familyName != \"\") {\n        return null;\n      } else {\n        return ErrorType.Name;\n      }\n    }\n  }, {\n    key: \"dobCheck\",\n    value: function dobCheck() {\n      if (this.state.searchState.day === \"\" && this.state.searchState.month === \"\" && this.state.searchState.year === \"\") {\n        return null;\n      }\n\n      if ((this.state.searchState.day !== \"\" || this.state.searchState.month !== \"\" || this.state.searchState.year !== \"\") && (this.state.searchState.day === \"\" || this.state.searchState.month === \"\" || this.state.searchState.year === \"\")) {\n        return ErrorType.Date;\n      }\n\n      if (isNaN(parseInt(this.state.searchState.day)) || isNaN(parseInt(this.state.searchState.month)) || isNaN(parseInt(this.state.searchState.year))) {\n        return ErrorType.Date;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state$errorType,\n          _this2 = this;\n\n      var isNameError = this.state.errorType === ErrorType.Name;\n      var isDateError = this.state.errorType === ErrorType.Date;\n      return React.createElement(\"div\", {\n        className: \"InfoSearch\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"govuk-grid-column-one-half govuk-form-group \" + (isNameError || isDateError ? \"govuk-form-group--error\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(ErrorMessage, {\n        hidden: this.state.warningHidden,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, ((_this$state$errorType = this.state.errorType) === null || _this$state$errorType === void 0 ? void 0 : _this$state$errorType.toString()) || \"\"), React.createElement(TextInputGroup, {\n        onChange: function onChange(text) {\n          return _this2.state.searchState.firstName = text;\n        },\n        id: \"firstName\",\n        name: \"First Name\",\n        format: \"govuk-!-width-one-half \" + (isNameError ? \"govuk-input--error\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(TextInputGroup, {\n        onChange: function onChange(text) {\n          return _this2.state.searchState.familyName = text;\n        },\n        id: \"familyName\",\n        name: \"Family Name\",\n        format: \"govuk-!-width-one-half \" + (isNameError ? \"govuk-input--error\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(DobInputGroup, {\n        onChange: function onChange(year, month, day) {\n          var newSearchState = {\n            firstName: _this2.state.searchState.firstName,\n            familyName: _this2.state.searchState.familyName,\n            year: year,\n            month: month,\n            day: day\n          };\n\n          _this2.setState(_objectSpread({}, _this2.state, {\n            searchState: newSearchState\n          }));\n        },\n        format: isDateError ? \"govuk-input--error\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"govuk-button\",\n        \"data-module\": \"govuk-button\",\n        onClick: function onClick(event) {\n          return _this2.search(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Search\")));\n    }\n  }]);\n\n  return InfoSearch;\n}(React.Component);\n\nexport default InfoSearch;","map":{"version":3,"sources":["/Users/matthewpugh/Projects/family-context-ui/src/components/SearchPage/InfoSearch.tsx"],"names":["React","TextInputGroup","DobInputGroup","ErrorMessage","ErrorType","InfoSearch","props","state","warningHidden","errorType","searchState","firstName","familyName","year","month","day","event","preventDefault","dobWarning","dobCheck","nameWarning","nameCheck","setState","searchForIndividual","dob","Date","UTC","parseInt","search","lastName","dateOfBirth","toISOString","Name","isNaN","isNameError","isDateError","toString","text","newSearchState","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { TextInputGroup, DobInputGroup } from \"../InputGroups\";\nimport ErrorMessage from \"../ErrorMessage\";\n\ntype InfoSearchProps = {\n    search: (info: { [id: string]: string }) => void\n}\n\nenum ErrorType {\n    Name = \"Enter the first name and last name\",\n    Date = \"Enter a real date of birth or leave it empty\"\n}\n\ntype InfoSearchState = {\n    warningHidden: boolean, \n    errorType: ErrorType | null,\n    searchState: {\n        firstName: string, \n        familyName: string, \n        year: string, \n        month: string, \n        day: string\n    }\n}\n\nclass InfoSearch extends React.Component<InfoSearchProps, InfoSearchState> {\n\n    constructor(props: InfoSearchProps ) {\n        super(props);\n        this.state = {warningHidden: true, errorType: null, searchState: {firstName: \"\", familyName: \"\", year: \"\", month: \"\", day: \"\"}};\n    }\n\n    search (event: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\n        event.preventDefault();\n\n        let dobWarning = this.dobCheck();\n        let nameWarning = this.nameCheck();\n\n        if (dobWarning){\n            this.setState({...this.state, warningHidden: false, errorType: dobWarning})\n            return;\n        }\n\n        if (nameWarning){\n            this.setState({...this.state, warningHidden: false, errorType: nameWarning})\n            return;\n        }\n\n        this.searchForIndividual();\n    }\n\n    searchForIndividual() { \n        if (this.state.searchState.day !== \"\" && this.state.searchState.month !== \"\" && this.state.searchState.year !== \"\") {\n            var dob = new Date(Date.UTC(parseInt(this.state.searchState.year), parseInt(this.state.searchState.month)-1, parseInt(this.state.searchState.day)));\n            this.props.search({ firstName: this.state.searchState.firstName, lastName: this.state.searchState.familyName, dateOfBirth: dob.toISOString() });\n        } else {\n            this.props.search({ firstName: this.state.searchState.firstName, lastName: this.state.searchState.familyName});\n        }\n    }\n\n    nameCheck(){\n        if (this.state.searchState.firstName !== \"\" && this.state.searchState.familyName != \"\") {\n            return null;\n        } else {\n            return ErrorType.Name;\n        }\n    }\n\n    dobCheck(){\n        if (this.state.searchState.day === \"\" && this.state.searchState.month === \"\" && this.state.searchState.year === \"\") {\n            return null;\n        }\n        if ((this.state.searchState.day !== \"\" || this.state.searchState.month !== \"\" || this.state.searchState.year !== \"\") \n        && (this.state.searchState.day === \"\" || this.state.searchState.month === \"\" || this.state.searchState.year === \"\")) {\n            return ErrorType.Date;\n        }\n        if (isNaN(parseInt(this.state.searchState.day)) || isNaN(parseInt(this.state.searchState.month)) || isNaN(parseInt(this.state.searchState.year))) {\n            return ErrorType.Date;\n        }\n        return null;\n    }\n\n    render() {\n    var isNameError = this.state.errorType === ErrorType.Name;\n    var isDateError = this.state.errorType === ErrorType.Date;\n\n    return (\n        <div className=\"InfoSearch\">\n            <div className={\"govuk-grid-column-one-half govuk-form-group \" + (isNameError || isDateError ? \"govuk-form-group--error\" : \"\")}>\n                <ErrorMessage hidden={this.state.warningHidden}>{this.state.errorType?.toString() || \"\"}</ErrorMessage>\n                <TextInputGroup \n                    onChange={(text: string) => this.state.searchState.firstName = text} \n                    id=\"firstName\" \n                    name=\"First Name\" \n                    format={\"govuk-!-width-one-half \" + (isNameError ? \"govuk-input--error\" : \"\")} />\n                <TextInputGroup \n                    onChange={(text: string) => this.state.searchState.familyName = text} \n                    id=\"familyName\" \n                    name=\"Family Name\" \n                    format={\"govuk-!-width-one-half \" + (isNameError ? \"govuk-input--error\" : \"\")} />\n                <DobInputGroup \n                    onChange={(year: string, month: string, day: string ) => {\n                        var newSearchState = {firstName: this.state.searchState.firstName, familyName: this.state.searchState.familyName, year: year, month: month, day: day};\n                        this.setState({...this.state, searchState: newSearchState});}}\n                    format={(isDateError ? \"govuk-input--error\" : \"\")}\n                />\n                <button className=\"govuk-button\" data-module=\"govuk-button\" onClick={(event) => this.search(event)}>\n                    Search\n                </button>\n            </div>\n        </div>\n    )\n    }\n}\n\nexport default InfoSearch;"]},"metadata":{},"sourceType":"module"}