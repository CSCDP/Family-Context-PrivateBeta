{"ast":null,"code":"import _objectSpread from \"/Users/matthewpugh/Projects/family-context-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/matthewpugh/Projects/family-context-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/matthewpugh/Projects/family-context-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/matthewpugh/Projects/family-context-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/matthewpugh/Projects/family-context-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/matthewpugh/Projects/family-context-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/matthewpugh/Projects/family-context-ui/src/components/ServiceInvolvement.tsx\";\nimport React from 'react';\nimport ServiceInvolvementAccordion from './Accordion/ServiceInvolvementAccordion';\nimport DataContent from './DataContent';\nimport ServiceInvolvementDisplay from './ServiceInvolvementContent/ServiceInvolvementDisplay';\nimport OpenAllButton from './Accordion/OpenAllButton';\n\nvar ServiceInvolvement = /*#__PURE__*/function (_React$Component) {\n  _inherits(ServiceInvolvement, _React$Component);\n\n  function ServiceInvolvement(props) {\n    var _this;\n\n    _classCallCheck(this, ServiceInvolvement);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ServiceInvolvement).call(this, props));\n    var emptyData = {};\n    props.summaries.forEach(function (summary) {\n      emptyData[summary.id] = null;\n    });\n    _this.state = {\n      serviceInvolvementDetailsData: emptyData,\n      accordionsOpen: new Array(props.summaries.length).fill(false)\n    };\n    return _this;\n  }\n\n  _createClass(ServiceInvolvement, [{\n    key: \"click\",\n    value: function click(serviceId, index) {\n      var _this2 = this;\n\n      var amountOpen = this.state.accordionsOpen;\n      amountOpen[index] = !this.state.accordionsOpen[index];\n      this.setState(_objectSpread({}, this.state, {\n        accordionsOpen: amountOpen\n      }));\n\n      if (this.state.serviceInvolvementDetailsData[serviceId] === null) {\n        this.props.client.getServiceDetail(this.props.personId, serviceId).then(function (result) {\n          var newData = _objectSpread({}, _this2.state.serviceInvolvementDetailsData);\n\n          newData[serviceId] = result;\n\n          _this2.setState(_objectSpread({}, _this2.state, {\n            serviceInvolvementDetailsData: newData\n          }));\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      sessionStorage.removeItem(\"accordion-with-summary-sections-content-key\");\n      var serviceInvolvementElements = document.getElementById(\"service-involvements\");\n\n      if (this.props.summaries.some(function (summary) {\n        return summary.recordsAvailable;\n      })) {\n        window.GOVUKFrontend.initAll({\n          scope: serviceInvolvementElements\n        });\n        var openAllButtonToRemove = serviceInvolvementElements === null || serviceInvolvementElements === void 0 ? void 0 : serviceInvolvementElements.getElementsByClassName(\"govuk-accordion__controls\")[0];\n        var accordion = document.getElementById(\"accordion-with-summary-sections\");\n\n        if (openAllButtonToRemove) {\n          accordion === null || accordion === void 0 ? void 0 : accordion.removeChild(openAllButtonToRemove);\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        id: \"service-involvements\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"govuk-accordion js-enabled\",\n        \"data-module\": \"govuk-accordion\",\n        id: \"accordion-with-summary-sections\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, this.props.summaries.some(function (summary) {\n        return summary.recordsAvailable;\n      }) ? React.createElement(OpenAllButton, {\n        containerId: \"service-involvements\",\n        amountOpen: this.state.accordionsOpen.filter(function (item) {\n          return item;\n        }).length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }) : React.createElement(React.Fragment, null), this.props.summaries.map(function (summary, index) {\n        var _this3$state$serviceI;\n\n        return React.createElement(ServiceInvolvementAccordion, {\n          serviceInvolvementDetailsSummary: summary,\n          key: summary.id,\n          click: function click() {\n            return _this3.click(summary.id, index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(DataContent, {\n          result: _this3.state.serviceInvolvementDetailsData[summary.id],\n          loading: React.createElement(ServiceDetailsLoading, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }),\n          error: React.createElement(ServiceDetailsNotFound, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(ServiceInvolvementDisplay, {\n          details: (_this3$state$serviceI = _this3.state.serviceInvolvementDetailsData[summary.id]) === null || _this3$state$serviceI === void 0 ? void 0 : _this3$state$serviceI.data,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        })));\n      })));\n    }\n  }]);\n\n  return ServiceInvolvement;\n}(React.Component);\n\nvar ServiceDetailsLoading = function ServiceDetailsLoading() {\n  return React.createElement(\"div\", {\n    className: \"govuk-heading-m\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Searching for Service Involvement Details...\");\n};\n\nvar ServiceDetailsNotFound = function ServiceDetailsNotFound() {\n  return React.createElement(\"div\", {\n    className: \"govuk-heading-m\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"No details found\");\n};\n\nexport default ServiceInvolvement;","map":{"version":3,"sources":["/Users/matthewpugh/Projects/family-context-ui/src/components/ServiceInvolvement.tsx"],"names":["React","ServiceInvolvementAccordion","DataContent","ServiceInvolvementDisplay","OpenAllButton","ServiceInvolvement","props","emptyData","summaries","forEach","summary","id","state","serviceInvolvementDetailsData","accordionsOpen","Array","length","fill","serviceId","index","amountOpen","setState","client","getServiceDetail","personId","then","result","newData","sessionStorage","removeItem","serviceInvolvementElements","document","getElementById","some","recordsAvailable","window","GOVUKFrontend","initAll","scope","openAllButtonToRemove","getElementsByClassName","accordion","removeChild","filter","item","map","click","data","Component","ServiceDetailsLoading","ServiceDetailsNotFound"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ServiceInvolvementAccordion from './Accordion/ServiceInvolvementAccordion';\nimport ServiceInvolvementDetailsSummary from '../models/ServiceInvolvementDetailsSummary';\nimport ApiClient, { RequestResult } from '../clients/ApiClient';\nimport ServiceDetail from '../models/ServiceDetail';\nimport DataContent from './DataContent';\nimport ServiceInvolvementDisplay from './ServiceInvolvementContent/ServiceInvolvementDisplay';\nimport OpenAllButton from './Accordion/OpenAllButton';\n\ninterface ServiceInvolvementProps {\n    summaries: ServiceInvolvementDetailsSummary[],\n    client: ApiClient,\n    personId: string\n}\n\ninterface ServiceInvolvementState { \n    serviceInvolvementDetailsData: { [id: string]: RequestResult<ServiceDetail> | null; },\n    accordionsOpen: Boolean[]\n}\n\nclass ServiceInvolvement extends React.Component<ServiceInvolvementProps, ServiceInvolvementState>  {\n\n    constructor(props: ServiceInvolvementProps ) {\n        super(props);\n\n        let emptyData: { [id: string]: RequestResult<ServiceDetail> | null; } = {};\n        props.summaries.forEach(summary => {\n            emptyData[summary.id] = null\n        });\n\n        this.state = {\n            serviceInvolvementDetailsData: emptyData,\n            accordionsOpen: new Array(props.summaries.length).fill(false)\n        };\n    }\n\n    click(serviceId: string, index: number): void {\n      var amountOpen = this.state.accordionsOpen\n      amountOpen[index] = !this.state.accordionsOpen[index];\n      this.setState({...this.state, accordionsOpen: amountOpen})\n\n      if (this.state.serviceInvolvementDetailsData[serviceId] === null) {\n        this.props.client.getServiceDetail(this.props.personId, serviceId).then(result => {\n          let newData = { ...this.state.serviceInvolvementDetailsData };\n          newData[serviceId] = result as RequestResult<ServiceDetail>;\n          this.setState({ ...this.state, serviceInvolvementDetailsData: newData });\n        });\n      }\n    }\n\n    componentDidMount() {\n      sessionStorage.removeItem(\"accordion-with-summary-sections-content-key\") \n      var serviceInvolvementElements = document.getElementById(\"service-involvements\");\n\n      if(this.props.summaries.some(summary => summary.recordsAvailable)) {\n        window.GOVUKFrontend.initAll({ scope: serviceInvolvementElements });\n\n        var openAllButtonToRemove = serviceInvolvementElements?.getElementsByClassName(\"govuk-accordion__controls\")[0];\n        var accordion = document.getElementById(\"accordion-with-summary-sections\");\n\n        if (openAllButtonToRemove) {\n          accordion?.removeChild(openAllButtonToRemove);\n        }\n      }\n    }\n\n    render() {\n        return (\n            <div id=\"service-involvements\">\n                <div className=\"govuk-accordion js-enabled\" data-module=\"govuk-accordion\" id=\"accordion-with-summary-sections\">\n                    {this.props.summaries.some(summary => summary.recordsAvailable) \n                    ? <OpenAllButton containerId={\"service-involvements\"} amountOpen={this.state.accordionsOpen.filter(item => item).length}/>\n                    : <></>\n                    }\n                    {this.props.summaries.map((summary, index) =>\n                        <ServiceInvolvementAccordion serviceInvolvementDetailsSummary={summary} key={summary.id} click={() => this.click(summary.id, index)}>\n                          <DataContent result={this.state.serviceInvolvementDetailsData[summary.id]} loading={<ServiceDetailsLoading />} error={<ServiceDetailsNotFound />}>\n                            <ServiceInvolvementDisplay details={this.state.serviceInvolvementDetailsData[summary.id]?.data as ServiceDetail} />\n                          </DataContent>\n                        </ServiceInvolvementAccordion>)}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst ServiceDetailsLoading: React.FC = () => {\n  return (\n    <div className=\"govuk-heading-m\">\n      Searching for Service Involvement Details...\n    </div>\n  );\n}\n\nconst ServiceDetailsNotFound: React.FC = () => {\n  return (\n    <div className=\"govuk-heading-m\">\n      No details found\n    </div>\n  )\n}\n\nexport default ServiceInvolvement;"]},"metadata":{},"sourceType":"module"}