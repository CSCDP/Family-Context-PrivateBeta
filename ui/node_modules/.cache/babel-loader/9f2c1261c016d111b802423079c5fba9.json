{"ast":null,"code":"var ENCODING_KEY = \"8ad2fb\";\n\nfunction getHash(properties) {\n  var hash = ENCODING_KEY.split(\"\");\n\n  for (var propertyKey in properties) {\n    var stringArray = \"\".concat(propertyKey, \"+\").concat(properties[propertyKey]).split(\"\");\n    hash = xorArrays(hash, stringArray);\n  }\n\n  return \"#\".concat(btoa(hash.join(\"\")));\n}\n\nfunction xorArrays(array1, array2) {\n  var keyLength = array1.length;\n\n  for (var index2 = 0; index2 < array2.length; index2++) {\n    for (var base = 0; base < keyLength + 1; base++) {\n      var index = (index2 + base * (keyLength - 1)) % keyLength;\n      array1[index] = String.fromCharCode(array1[index].charCodeAt(0) ^ array2[index2].charCodeAt(0));\n    }\n  }\n\n  return array1;\n}\n\nexport { getHash };","map":{"version":3,"sources":["/Users/matthewpugh/Projects/family-context-ui/src/tools/Obfuscation.tsx"],"names":["ENCODING_KEY","getHash","properties","hash","split","propertyKey","stringArray","xorArrays","btoa","join","array1","array2","keyLength","length","index2","base","index","String","fromCharCode","charCodeAt"],"mappings":"AAAA,IAAMA,YAAY,GAAG,QAArB;;AAEA,SAASC,OAAT,CAAiBC,UAAjB,EAA6D;AACzD,MAAIC,IAAI,GAAGH,YAAY,CAACI,KAAb,CAAmB,EAAnB,CAAX;;AAEA,OAAK,IAAIC,WAAT,IAAwBH,UAAxB,EAAoC;AAChC,QAAII,WAAW,GAAG,UAAGD,WAAH,cAAkBH,UAAU,CAACG,WAAD,CAA5B,EAA4CD,KAA5C,CAAkD,EAAlD,CAAlB;AACAD,IAAAA,IAAI,GAAGI,SAAS,CAACJ,IAAD,EAAOG,WAAP,CAAhB;AACH;;AAED,oBAAWE,IAAI,CAACL,IAAI,CAACM,IAAL,CAAU,EAAV,CAAD,CAAf;AACH;;AAED,SAASF,SAAT,CAAmBG,MAAnB,EAAqCC,MAArC,EAAiE;AAC7D,MAAIC,SAAS,GAAGF,MAAM,CAACG,MAAvB;;AAEA,OAAK,IAAIC,MAAM,GAAG,CAAlB,EAAqBA,MAAM,GAAGH,MAAM,CAACE,MAArC,EAA6CC,MAAM,EAAnD,EAAuD;AACnD,SAAK,IAAIC,IAAI,GAAG,CAAhB,EAAmBA,IAAI,GAAGH,SAAS,GAAG,CAAtC,EAAyCG,IAAI,EAA7C,EAAiD;AAC7C,UAAIC,KAAK,GAAG,CAACF,MAAM,GAAGC,IAAI,IAAEH,SAAS,GAAG,CAAd,CAAd,IAAkCA,SAA9C;AACAF,MAAAA,MAAM,CAACM,KAAD,CAAN,GAAgBC,MAAM,CAACC,YAAP,CAAoBR,MAAM,CAACM,KAAD,CAAN,CAAcG,UAAd,CAAyB,CAAzB,IAA8BR,MAAM,CAACG,MAAD,CAAN,CAAeK,UAAf,CAA0B,CAA1B,CAAlD,CAAhB;AACH;AACJ;;AAED,SAAOT,MAAP;AACH;;AAED,SAAQT,OAAR","sourcesContent":["const ENCODING_KEY = \"8ad2fb\"\n\nfunction getHash(properties: {[id: string]: string}): string {\n    var hash = ENCODING_KEY.split(\"\");\n\n    for (let propertyKey in properties) {\n        var stringArray = `${propertyKey}+${properties[propertyKey]}`.split(\"\")\n        hash = xorArrays(hash, stringArray)\n    }\n\n    return `#${btoa(hash.join(\"\"))}`\n}\n\nfunction xorArrays(array1: string[], array2: string[]): string[] {\n    var keyLength = array1.length\n\n    for (let index2 = 0; index2 < array2.length; index2++) {\n        for (let base = 0; base < keyLength + 1; base++) {\n            var index = (index2 + base*(keyLength - 1)) % keyLength;\n            array1[index] = String.fromCharCode(array1[index].charCodeAt(0) ^ array2[index2].charCodeAt(0))\n        }\n    }\n\n    return array1;\n}\n\nexport {getHash}"]},"metadata":{},"sourceType":"module"}