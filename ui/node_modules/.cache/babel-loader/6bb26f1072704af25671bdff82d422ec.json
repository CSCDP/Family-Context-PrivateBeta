{"ast":null,"code":"var _jsxFileName = \"/Users/matthewpugh/Projects/family-context-ui/src/components/ServiceInvolvementContent/GenericComponent.tsx\";\nimport React from 'react';\nimport ArrayComponent from './ArrayComponent';\nimport StringComponent from './StringComponent';\nimport ObjectComponent from './ObjectComponent';\n\nvar GenericComponent = function GenericComponent(props) {\n  var type = props.schema.type;\n\n  switch (type) {\n    case \"array\":\n      {\n        var arraySchema = props.schema;\n        return React.createElement(ArrayComponent, {\n          schema: arraySchema,\n          data: props.data,\n          keyId: props.keyId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        });\n      }\n\n    case \"object\":\n      {\n        var objectSchema = props.schema;\n        return React.createElement(ObjectComponent, {\n          schema: objectSchema,\n          data: props.data,\n          keyId: props.keyId,\n          arrayIndex: props.arrayIndex,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        });\n      }\n\n    case \"string\":\n      {\n        var stringSchema = props.schema;\n        return React.createElement(StringComponent, {\n          schema: stringSchema,\n          data: props.data,\n          keyId: props.keyId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        });\n      }\n\n    default:\n      {\n        throw new Error(\"Unknown type used.\");\n      }\n  }\n};\n\nexport default GenericComponent;","map":{"version":3,"sources":["/Users/matthewpugh/Projects/family-context-ui/src/components/ServiceInvolvementContent/GenericComponent.tsx"],"names":["React","ArrayComponent","StringComponent","ObjectComponent","GenericComponent","props","type","schema","arraySchema","data","keyId","objectSchema","arrayIndex","stringSchema","Error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,IAAMC,gBAA6F,GAAG,SAAhGA,gBAAgG,CAACC,KAAD,EAA8E;AAEhL,MAAIC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaD,IAAxB;;AACA,UAAQA,IAAR;AACI,SAAK,OAAL;AAAc;AACV,YAAIE,WAAW,GAAGH,KAAK,CAACE,MAAxB;AACA,eAAO,oBAAC,cAAD;AAAgB,UAAA,MAAM,EAAEC,WAAxB;AAAqC,UAAA,IAAI,EAAEH,KAAK,CAACI,IAAjD;AAAuD,UAAA,KAAK,EAAEJ,KAAK,CAACK,KAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AACD,SAAK,QAAL;AAAe;AACX,YAAIC,YAAY,GAAGN,KAAK,CAACE,MAAzB;AACA,eAAO,oBAAC,eAAD;AAAiB,UAAA,MAAM,EAAEI,YAAzB;AAAuC,UAAA,IAAI,EAAEN,KAAK,CAACI,IAAnD;AAAyD,UAAA,KAAK,EAAEJ,KAAK,CAACK,KAAtE;AAA6E,UAAA,UAAU,EAAEL,KAAK,CAACO,UAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AACD,SAAK,QAAL;AAAe;AACX,YAAIC,YAAY,GAAGR,KAAK,CAACE,MAAzB;AACA,eAAO,oBAAC,eAAD;AAAiB,UAAA,MAAM,EAAEM,YAAzB;AAAuC,UAAA,IAAI,EAAER,KAAK,CAACI,IAAnD;AAAyD,UAAA,KAAK,EAAEJ,KAAK,CAACK,KAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AACD;AAAS;AACL,cAAM,IAAII,KAAJ,CAAU,oBAAV,CAAN;AACH;AAfL;AAiBH,CApBD;;AAsBA,eAAeV,gBAAf","sourcesContent":["import React from 'react'\nimport Schema, { ArraySchema, ObjectSchema, StringSchema } from '../../models/Schema';\nimport ArrayComponent from './ArrayComponent';\nimport StringComponent from './StringComponent';\nimport ObjectComponent from './ObjectComponent';\n\nconst GenericComponent: React.FC<{ schema: Schema, data: any, keyId: string, arrayIndex?: string }> = (props: { schema: Schema, data: any, keyId: string, arrayIndex?: string }) => {\n\n    let type = props.schema.type;\n    switch (type) {\n        case \"array\": {\n            let arraySchema = props.schema as ArraySchema;\n            return <ArrayComponent schema={arraySchema} data={props.data} keyId={props.keyId} />\n        }\n        case \"object\": {\n            let objectSchema = props.schema as ObjectSchema;\n            return <ObjectComponent schema={objectSchema} data={props.data} keyId={props.keyId} arrayIndex={props.arrayIndex} />\n        }\n        case \"string\": {\n            let stringSchema = props.schema as StringSchema;\n            return <StringComponent schema={stringSchema} data={props.data} keyId={props.keyId} />\n        }\n        default: {\n            throw new Error(\"Unknown type used.\");\n        }\n    }\n}\n\nexport default GenericComponent;"]},"metadata":{},"sourceType":"module"}