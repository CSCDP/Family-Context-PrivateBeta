openapi: 3.0.1
info:
  title: Family Context
  description: This is the API definition for Family Context
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 0.0.1
servers:
- url: /
security:
- cookieAuth: []
paths:
  /api/auth/status:
    get:
      tags:
      - auth
      summary: Get authentication status
      description: |
        Checks to see if there is currently an active authentication session. Returns the name of the current credentials if known.
      operationId: get_auth_status
      responses:
        "200":
          description: authenticated credentials present - details in message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "401":
          description: no authenticated credentials present or credentials not valid
            for this application
          content: {}
      x-openapi-router-controller: swagger_server.controllers.auth_controller
  /api/auth/login:
    post:
      tags:
      - auth
      summary: Submit authentication details
      description: |
        TODO:
      operationId: post_auth_login
      responses:
        "302":
          description: authenticated credentials present - details in message
          content: {}
        "401":
          description: no authenticated credentials present or credentials not valid
            for this application
          content: {}
      security: []
      x-openapi-router-controller: swagger_server.controllers.auth_controller
  /person/{personId}:
    get:
      tags:
      - person
      summary: Find person by ID
      description: Returns a single person
      operationId: get_person_by_id
      parameters:
      - name: personId
        in: path
        description: ID of person to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        "404":
          description: Person not found
          content: {}
      x-openapi-router-controller: swagger_server.controllers.person_controller
components:
  schemas:
    Person:
      required:
      - firstName
      - id
      - lastName
      type: object
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        dateOfBirth:
          type: string
          format: date
        gender:
          pattern: '[male|female|other]'
          type: string
          description: The person's gender. Leave blank for 'unknown'.
        ethnicity:
          type: string
        address:
          type: string
        serviceData:
          $ref: '#/components/schemas/ServiceMap'
      example:
        firstName: firstName
        lastName: lastName
        address: address
        gender: gender
        ethnicity: ethnicity
        serviceData:
          SCHOOL: ""
          ASC: ""
          HOUSING: ""
          POLICE: ""
        dateOfBirth: 2000-01-23
        id: id
    ServiceMap:
      type: object
      properties:
        ASC:
          $ref: '#/components/schemas/AdultSocialCare'
        HOUSING:
          $ref: '#/components/schemas/Housing'
        POLICE:
          $ref: '#/components/schemas/Police'
        SCHOOL:
          $ref: '#/components/schemas/School'
      example:
        SCHOOL: ""
        ASC: ""
        HOUSING: ""
        POLICE: ""
    SourceData:
      type: object
      properties:
        coverageStartDate:
          type: string
          format: date
        coverageEndDate:
          type: string
          format: date
        coverageGeographicArea:
          type: string
    Police:
      allOf:
      - $ref: '#/components/schemas/SourceData'
      - type: object
        properties:
          serviceInvolvement:
            pattern: '[yes|no]'
            type: string
          contact:
            $ref: '#/components/schemas/Contact'
          policeStation:
            type: string
          offences:
            type: array
            items:
              $ref: '#/components/schemas/Police_offences'
    School:
      allOf:
      - $ref: '#/components/schemas/SourceData'
      - type: object
        properties:
          serviceInvolvement:
            pattern: '[current|historic]'
            type: string
          contact:
            $ref: '#/components/schemas/Contact'
          schoolName:
            type: string
          admissionType:
            type: string
    AdultSocialCare:
      allOf:
      - $ref: '#/components/schemas/SourceData'
      - type: object
        properties:
          serviceInvolvement:
            pattern: '[current|historic]'
            type: string
          contact:
            $ref: '#/components/schemas/Contact'
          startDateOfLastInvolvement:
            type: string
            format: date
          dateOfMostRecentInteraction:
            type: string
            format: date
    Housing:
      allOf:
      - $ref: '#/components/schemas/SourceData'
      - type: object
        properties:
          serviceInvolvement:
            pattern: '[current|historic]'
            type: string
          contact:
            $ref: '#/components/schemas/Contact'
          antiSocialBehaviour:
            pattern: '[open|closed]'
            type: string
          rentArrears:
            pattern: '[open|closed]'
            type: string
          noticeSeekingPossession:
            pattern: '[open|closed]'
            type: string
          eviction:
            pattern: '[open|closed]'
            type: string
    Contact:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        role:
          type: string
    inline_response_200:
      required:
      - status
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        status:
          pattern: '[authenticated]'
          type: string
      example:
        name: name
        id: id
        status: status
    Police_offences:
      type: object
      properties:
        dateOfOffence:
          type: string
          format: date
        typeOfOffence:
          type: string
        natureOfInvolvement:
          type: string
  securitySchemes:
    cookieAuth:
      type: apiKey
      name: FCSESSIONID
      in: cookie
      x-apikeyInfoFunc: swagger_server.controllers.authorization_controller.check_cookieAuth

