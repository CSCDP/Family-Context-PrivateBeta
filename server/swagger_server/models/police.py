# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.offence import Offence  # noqa: F401,E501
from swagger_server.models.source_data import SourceData  # noqa: F401,E501
from swagger_server import util


class Police(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, coverage_start_date: date=None, coverage_end_date: date=None, coverage_geographic_area: str=None, service_involvement: str=None, police_station: str=None, contact_email: str=None, contact_number: str=None, offences: List[Offence]=None):  # noqa: E501
        """Police - a model defined in Swagger

        :param coverage_start_date: The coverage_start_date of this Police.  # noqa: E501
        :type coverage_start_date: date
        :param coverage_end_date: The coverage_end_date of this Police.  # noqa: E501
        :type coverage_end_date: date
        :param coverage_geographic_area: The coverage_geographic_area of this Police.  # noqa: E501
        :type coverage_geographic_area: str
        :param service_involvement: The service_involvement of this Police.  # noqa: E501
        :type service_involvement: str
        :param police_station: The police_station of this Police.  # noqa: E501
        :type police_station: str
        :param contact_email: The contact_email of this Police.  # noqa: E501
        :type contact_email: str
        :param contact_number: The contact_number of this Police.  # noqa: E501
        :type contact_number: str
        :param offences: The offences of this Police.  # noqa: E501
        :type offences: List[Offence]
        """
        self.swagger_types = {
            'coverage_start_date': date,
            'coverage_end_date': date,
            'coverage_geographic_area': str,
            'service_involvement': str,
            'police_station': str,
            'contact_email': str,
            'contact_number': str,
            'offences': List[Offence]
        }

        self.attribute_map = {
            'coverage_start_date': 'coverageStartDate',
            'coverage_end_date': 'coverageEndDate',
            'coverage_geographic_area': 'coverageGeographicArea',
            'service_involvement': 'serviceInvolvement',
            'police_station': 'policeStation',
            'contact_email': 'contactEmail',
            'contact_number': 'contactNumber',
            'offences': 'offences'
        }
        self._coverage_start_date = coverage_start_date
        self._coverage_end_date = coverage_end_date
        self._coverage_geographic_area = coverage_geographic_area
        self._service_involvement = service_involvement
        self._police_station = police_station
        self._contact_email = contact_email
        self._contact_number = contact_number
        self._offences = offences

    @classmethod
    def from_dict(cls, dikt) -> 'Police':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Police of this Police.  # noqa: E501
        :rtype: Police
        """
        return util.deserialize_model(dikt, cls)

    @property
    def coverage_start_date(self) -> date:
        """Gets the coverage_start_date of this Police.


        :return: The coverage_start_date of this Police.
        :rtype: date
        """
        return self._coverage_start_date

    @coverage_start_date.setter
    def coverage_start_date(self, coverage_start_date: date):
        """Sets the coverage_start_date of this Police.


        :param coverage_start_date: The coverage_start_date of this Police.
        :type coverage_start_date: date
        """

        self._coverage_start_date = coverage_start_date

    @property
    def coverage_end_date(self) -> date:
        """Gets the coverage_end_date of this Police.


        :return: The coverage_end_date of this Police.
        :rtype: date
        """
        return self._coverage_end_date

    @coverage_end_date.setter
    def coverage_end_date(self, coverage_end_date: date):
        """Sets the coverage_end_date of this Police.


        :param coverage_end_date: The coverage_end_date of this Police.
        :type coverage_end_date: date
        """

        self._coverage_end_date = coverage_end_date

    @property
    def coverage_geographic_area(self) -> str:
        """Gets the coverage_geographic_area of this Police.


        :return: The coverage_geographic_area of this Police.
        :rtype: str
        """
        return self._coverage_geographic_area

    @coverage_geographic_area.setter
    def coverage_geographic_area(self, coverage_geographic_area: str):
        """Sets the coverage_geographic_area of this Police.


        :param coverage_geographic_area: The coverage_geographic_area of this Police.
        :type coverage_geographic_area: str
        """

        self._coverage_geographic_area = coverage_geographic_area

    @property
    def service_involvement(self) -> str:
        """Gets the service_involvement of this Police.


        :return: The service_involvement of this Police.
        :rtype: str
        """
        return self._service_involvement

    @service_involvement.setter
    def service_involvement(self, service_involvement: str):
        """Sets the service_involvement of this Police.


        :param service_involvement: The service_involvement of this Police.
        :type service_involvement: str
        """

        self._service_involvement = service_involvement

    @property
    def police_station(self) -> str:
        """Gets the police_station of this Police.


        :return: The police_station of this Police.
        :rtype: str
        """
        return self._police_station

    @police_station.setter
    def police_station(self, police_station: str):
        """Sets the police_station of this Police.


        :param police_station: The police_station of this Police.
        :type police_station: str
        """

        self._police_station = police_station

    @property
    def contact_email(self) -> str:
        """Gets the contact_email of this Police.


        :return: The contact_email of this Police.
        :rtype: str
        """
        return self._contact_email

    @contact_email.setter
    def contact_email(self, contact_email: str):
        """Sets the contact_email of this Police.


        :param contact_email: The contact_email of this Police.
        :type contact_email: str
        """

        self._contact_email = contact_email

    @property
    def contact_number(self) -> str:
        """Gets the contact_number of this Police.


        :return: The contact_number of this Police.
        :rtype: str
        """
        return self._contact_number

    @contact_number.setter
    def contact_number(self, contact_number: str):
        """Sets the contact_number of this Police.


        :param contact_number: The contact_number of this Police.
        :type contact_number: str
        """

        self._contact_number = contact_number

    @property
    def offences(self) -> List[Offence]:
        """Gets the offences of this Police.


        :return: The offences of this Police.
        :rtype: List[Offence]
        """
        return self._offences

    @offences.setter
    def offences(self, offences: List[Offence]):
        """Sets the offences of this Police.


        :param offences: The offences of this Police.
        :type offences: List[Offence]
        """

        self._offences = offences
