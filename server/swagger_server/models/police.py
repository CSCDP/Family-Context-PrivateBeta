# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.contact import Contact  # noqa: F401,E501
from swagger_server.models.offence_records_found import OffenceRecordsFound  # noqa: F401,E501
from swagger_server.models.offence_summary import OffenceSummary  # noqa: F401,E501
from swagger_server import util


class Police(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, police_area: str=None, contact: Contact=None, safe_guarding_offences: List[OffenceSummary]=None, non_safe_guarding_offences: List[OffenceRecordsFound]=None):  # noqa: E501
        """Police - a model defined in Swagger

        :param police_area: The police_area of this Police.  # noqa: E501
        :type police_area: str
        :param contact: The contact of this Police.  # noqa: E501
        :type contact: Contact
        :param safe_guarding_offences: The safe_guarding_offences of this Police.  # noqa: E501
        :type safe_guarding_offences: List[OffenceSummary]
        :param non_safe_guarding_offences: The non_safe_guarding_offences of this Police.  # noqa: E501
        :type non_safe_guarding_offences: List[OffenceRecordsFound]
        """
        self.swagger_types = {
            'police_area': str,
            'contact': Contact,
            'safe_guarding_offences': List[OffenceSummary],
            'non_safe_guarding_offences': List[OffenceRecordsFound]
        }

        self.attribute_map = {
            'police_area': 'policeArea',
            'contact': 'contact',
            'safe_guarding_offences': 'safeGuardingOffences',
            'non_safe_guarding_offences': 'nonSafeGuardingOffences'
        }
        self._police_area = police_area
        self._contact = contact
        self._safe_guarding_offences = safe_guarding_offences
        self._non_safe_guarding_offences = non_safe_guarding_offences

    @classmethod
    def from_dict(cls, dikt) -> 'Police':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Police of this Police.  # noqa: E501
        :rtype: Police
        """
        return util.deserialize_model(dikt, cls)

    @property
    def police_area(self) -> str:
        """Gets the police_area of this Police.


        :return: The police_area of this Police.
        :rtype: str
        """
        return self._police_area

    @police_area.setter
    def police_area(self, police_area: str):
        """Sets the police_area of this Police.


        :param police_area: The police_area of this Police.
        :type police_area: str
        """

        self._police_area = police_area

    @property
    def contact(self) -> Contact:
        """Gets the contact of this Police.


        :return: The contact of this Police.
        :rtype: Contact
        """
        return self._contact

    @contact.setter
    def contact(self, contact: Contact):
        """Sets the contact of this Police.


        :param contact: The contact of this Police.
        :type contact: Contact
        """

        self._contact = contact

    @property
    def safe_guarding_offences(self) -> List[OffenceSummary]:
        """Gets the safe_guarding_offences of this Police.


        :return: The safe_guarding_offences of this Police.
        :rtype: List[OffenceSummary]
        """
        return self._safe_guarding_offences

    @safe_guarding_offences.setter
    def safe_guarding_offences(self, safe_guarding_offences: List[OffenceSummary]):
        """Sets the safe_guarding_offences of this Police.


        :param safe_guarding_offences: The safe_guarding_offences of this Police.
        :type safe_guarding_offences: List[OffenceSummary]
        """

        self._safe_guarding_offences = safe_guarding_offences

    @property
    def non_safe_guarding_offences(self) -> List[OffenceRecordsFound]:
        """Gets the non_safe_guarding_offences of this Police.


        :return: The non_safe_guarding_offences of this Police.
        :rtype: List[OffenceRecordsFound]
        """
        return self._non_safe_guarding_offences

    @non_safe_guarding_offences.setter
    def non_safe_guarding_offences(self, non_safe_guarding_offences: List[OffenceRecordsFound]):
        """Sets the non_safe_guarding_offences of this Police.


        :param non_safe_guarding_offences: The non_safe_guarding_offences of this Police.
        :type non_safe_guarding_offences: List[OffenceRecordsFound]
        """

        self._non_safe_guarding_offences = non_safe_guarding_offences
