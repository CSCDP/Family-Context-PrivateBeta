# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ServiceSummary(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: str=None, title: str=None, last_synchronised: datetime=None, coverage_start_date: date=None, coverage_end_date: date=None, records_available: bool=None):  # noqa: E501
        """ServiceSummary - a model defined in Swagger

        :param id: The id of this ServiceSummary.  # noqa: E501
        :type id: str
        :param title: The title of this ServiceSummary.  # noqa: E501
        :type title: str
        :param last_synchronised: The last_synchronised of this ServiceSummary.  # noqa: E501
        :type last_synchronised: datetime
        :param coverage_start_date: The coverage_start_date of this ServiceSummary.  # noqa: E501
        :type coverage_start_date: date
        :param coverage_end_date: The coverage_end_date of this ServiceSummary.  # noqa: E501
        :type coverage_end_date: date
        :param records_available: The records_available of this ServiceSummary.  # noqa: E501
        :type records_available: bool
        """
        self.swagger_types = {
            'id': str,
            'title': str,
            'last_synchronised': datetime,
            'coverage_start_date': date,
            'coverage_end_date': date,
            'records_available': bool
        }

        self.attribute_map = {
            'id': 'id',
            'title': 'title',
            'last_synchronised': 'lastSynchronised',
            'coverage_start_date': 'coverageStartDate',
            'coverage_end_date': 'coverageEndDate',
            'records_available': 'recordsAvailable'
        }
        self._id = id
        self._title = title
        self._last_synchronised = last_synchronised
        self._coverage_start_date = coverage_start_date
        self._coverage_end_date = coverage_end_date
        self._records_available = records_available

    @classmethod
    def from_dict(cls, dikt) -> 'ServiceSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ServiceSummary of this ServiceSummary.  # noqa: E501
        :rtype: ServiceSummary
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this ServiceSummary.


        :return: The id of this ServiceSummary.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this ServiceSummary.


        :param id: The id of this ServiceSummary.
        :type id: str
        """

        self._id = id

    @property
    def title(self) -> str:
        """Gets the title of this ServiceSummary.


        :return: The title of this ServiceSummary.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this ServiceSummary.


        :param title: The title of this ServiceSummary.
        :type title: str
        """

        self._title = title

    @property
    def last_synchronised(self) -> datetime:
        """Gets the last_synchronised of this ServiceSummary.


        :return: The last_synchronised of this ServiceSummary.
        :rtype: datetime
        """
        return self._last_synchronised

    @last_synchronised.setter
    def last_synchronised(self, last_synchronised: datetime):
        """Sets the last_synchronised of this ServiceSummary.


        :param last_synchronised: The last_synchronised of this ServiceSummary.
        :type last_synchronised: datetime
        """

        self._last_synchronised = last_synchronised

    @property
    def coverage_start_date(self) -> date:
        """Gets the coverage_start_date of this ServiceSummary.


        :return: The coverage_start_date of this ServiceSummary.
        :rtype: date
        """
        return self._coverage_start_date

    @coverage_start_date.setter
    def coverage_start_date(self, coverage_start_date: date):
        """Sets the coverage_start_date of this ServiceSummary.


        :param coverage_start_date: The coverage_start_date of this ServiceSummary.
        :type coverage_start_date: date
        """

        self._coverage_start_date = coverage_start_date

    @property
    def coverage_end_date(self) -> date:
        """Gets the coverage_end_date of this ServiceSummary.


        :return: The coverage_end_date of this ServiceSummary.
        :rtype: date
        """
        return self._coverage_end_date

    @coverage_end_date.setter
    def coverage_end_date(self, coverage_end_date: date):
        """Sets the coverage_end_date of this ServiceSummary.


        :param coverage_end_date: The coverage_end_date of this ServiceSummary.
        :type coverage_end_date: date
        """

        self._coverage_end_date = coverage_end_date

    @property
    def records_available(self) -> bool:
        """Gets the records_available of this ServiceSummary.


        :return: The records_available of this ServiceSummary.
        :rtype: bool
        """
        return self._records_available

    @records_available.setter
    def records_available(self, records_available: bool):
        """Sets the records_available of this ServiceSummary.


        :param records_available: The records_available of this ServiceSummary.
        :type records_available: bool
        """

        self._records_available = records_available
