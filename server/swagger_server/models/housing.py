# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.contact import Contact  # noqa: F401,E501
import re  # noqa: F401,E501
from swagger_server import util


class Housing(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, service_involvement: str=None, contact: Contact=None, anti_social_behaviour: str=None, rent_arrears: str=None, notice_seeking_possession: str=None, eviction: str=None):  # noqa: E501
        """Housing - a model defined in Swagger

        :param service_involvement: The service_involvement of this Housing.  # noqa: E501
        :type service_involvement: str
        :param contact: The contact of this Housing.  # noqa: E501
        :type contact: Contact
        :param anti_social_behaviour: The anti_social_behaviour of this Housing.  # noqa: E501
        :type anti_social_behaviour: str
        :param rent_arrears: The rent_arrears of this Housing.  # noqa: E501
        :type rent_arrears: str
        :param notice_seeking_possession: The notice_seeking_possession of this Housing.  # noqa: E501
        :type notice_seeking_possession: str
        :param eviction: The eviction of this Housing.  # noqa: E501
        :type eviction: str
        """
        self.swagger_types = {
            'service_involvement': str,
            'contact': Contact,
            'anti_social_behaviour': str,
            'rent_arrears': str,
            'notice_seeking_possession': str,
            'eviction': str
        }

        self.attribute_map = {
            'service_involvement': 'serviceInvolvement',
            'contact': 'contact',
            'anti_social_behaviour': 'antiSocialBehaviour',
            'rent_arrears': 'rentArrears',
            'notice_seeking_possession': 'noticeSeekingPossession',
            'eviction': 'eviction'
        }
        self._service_involvement = service_involvement
        self._contact = contact
        self._anti_social_behaviour = anti_social_behaviour
        self._rent_arrears = rent_arrears
        self._notice_seeking_possession = notice_seeking_possession
        self._eviction = eviction

    @classmethod
    def from_dict(cls, dikt) -> 'Housing':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Housing of this Housing.  # noqa: E501
        :rtype: Housing
        """
        return util.deserialize_model(dikt, cls)

    @property
    def service_involvement(self) -> str:
        """Gets the service_involvement of this Housing.


        :return: The service_involvement of this Housing.
        :rtype: str
        """
        return self._service_involvement

    @service_involvement.setter
    def service_involvement(self, service_involvement: str):
        """Sets the service_involvement of this Housing.


        :param service_involvement: The service_involvement of this Housing.
        :type service_involvement: str
        """

        self._service_involvement = service_involvement

    @property
    def contact(self) -> Contact:
        """Gets the contact of this Housing.


        :return: The contact of this Housing.
        :rtype: Contact
        """
        return self._contact

    @contact.setter
    def contact(self, contact: Contact):
        """Sets the contact of this Housing.


        :param contact: The contact of this Housing.
        :type contact: Contact
        """

        self._contact = contact

    @property
    def anti_social_behaviour(self) -> str:
        """Gets the anti_social_behaviour of this Housing.


        :return: The anti_social_behaviour of this Housing.
        :rtype: str
        """
        return self._anti_social_behaviour

    @anti_social_behaviour.setter
    def anti_social_behaviour(self, anti_social_behaviour: str):
        """Sets the anti_social_behaviour of this Housing.


        :param anti_social_behaviour: The anti_social_behaviour of this Housing.
        :type anti_social_behaviour: str
        """

        self._anti_social_behaviour = anti_social_behaviour

    @property
    def rent_arrears(self) -> str:
        """Gets the rent_arrears of this Housing.


        :return: The rent_arrears of this Housing.
        :rtype: str
        """
        return self._rent_arrears

    @rent_arrears.setter
    def rent_arrears(self, rent_arrears: str):
        """Sets the rent_arrears of this Housing.


        :param rent_arrears: The rent_arrears of this Housing.
        :type rent_arrears: str
        """

        self._rent_arrears = rent_arrears

    @property
    def notice_seeking_possession(self) -> str:
        """Gets the notice_seeking_possession of this Housing.


        :return: The notice_seeking_possession of this Housing.
        :rtype: str
        """
        return self._notice_seeking_possession

    @notice_seeking_possession.setter
    def notice_seeking_possession(self, notice_seeking_possession: str):
        """Sets the notice_seeking_possession of this Housing.


        :param notice_seeking_possession: The notice_seeking_possession of this Housing.
        :type notice_seeking_possession: str
        """

        self._notice_seeking_possession = notice_seeking_possession

    @property
    def eviction(self) -> str:
        """Gets the eviction of this Housing.


        :return: The eviction of this Housing.
        :rtype: str
        """
        return self._eviction

    @eviction.setter
    def eviction(self, eviction: str):
        """Sets the eviction of this Housing.


        :param eviction: The eviction of this Housing.
        :type eviction: str
        """

        self._eviction = eviction
