# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.source_data import SourceData  # noqa: F401,E501
from swagger_server import util


class Housing(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, coverage_start_date: date=None, coverage_end_date: date=None, coverage_geographic_area: str=None, service_involvement: str=None, lead_practitioner_name: str=None, lead_practitioner_phone: str=None, lead_practitioner_email: str=None, anti_social_behaviour: bool=None, anti_social_behaviour_case_open: bool=None, rent_arrears: bool=None, rent_arrears_case_open: bool=None, notice_seeking_possessions: bool=None, notice_seeking_possessions_case_open: bool=None, eviction: bool=None, eviction_case_open: bool=None):  # noqa: E501
        """Housing - a model defined in Swagger

        :param coverage_start_date: The coverage_start_date of this Housing.  # noqa: E501
        :type coverage_start_date: date
        :param coverage_end_date: The coverage_end_date of this Housing.  # noqa: E501
        :type coverage_end_date: date
        :param coverage_geographic_area: The coverage_geographic_area of this Housing.  # noqa: E501
        :type coverage_geographic_area: str
        :param service_involvement: The service_involvement of this Housing.  # noqa: E501
        :type service_involvement: str
        :param lead_practitioner_name: The lead_practitioner_name of this Housing.  # noqa: E501
        :type lead_practitioner_name: str
        :param lead_practitioner_phone: The lead_practitioner_phone of this Housing.  # noqa: E501
        :type lead_practitioner_phone: str
        :param lead_practitioner_email: The lead_practitioner_email of this Housing.  # noqa: E501
        :type lead_practitioner_email: str
        :param anti_social_behaviour: The anti_social_behaviour of this Housing.  # noqa: E501
        :type anti_social_behaviour: bool
        :param anti_social_behaviour_case_open: The anti_social_behaviour_case_open of this Housing.  # noqa: E501
        :type anti_social_behaviour_case_open: bool
        :param rent_arrears: The rent_arrears of this Housing.  # noqa: E501
        :type rent_arrears: bool
        :param rent_arrears_case_open: The rent_arrears_case_open of this Housing.  # noqa: E501
        :type rent_arrears_case_open: bool
        :param notice_seeking_possessions: The notice_seeking_possessions of this Housing.  # noqa: E501
        :type notice_seeking_possessions: bool
        :param notice_seeking_possessions_case_open: The notice_seeking_possessions_case_open of this Housing.  # noqa: E501
        :type notice_seeking_possessions_case_open: bool
        :param eviction: The eviction of this Housing.  # noqa: E501
        :type eviction: bool
        :param eviction_case_open: The eviction_case_open of this Housing.  # noqa: E501
        :type eviction_case_open: bool
        """
        self.swagger_types = {
            'coverage_start_date': date,
            'coverage_end_date': date,
            'coverage_geographic_area': str,
            'service_involvement': str,
            'lead_practitioner_name': str,
            'lead_practitioner_phone': str,
            'lead_practitioner_email': str,
            'anti_social_behaviour': bool,
            'anti_social_behaviour_case_open': bool,
            'rent_arrears': bool,
            'rent_arrears_case_open': bool,
            'notice_seeking_possessions': bool,
            'notice_seeking_possessions_case_open': bool,
            'eviction': bool,
            'eviction_case_open': bool
        }

        self.attribute_map = {
            'coverage_start_date': 'coverageStartDate',
            'coverage_end_date': 'coverageEndDate',
            'coverage_geographic_area': 'coverageGeographicArea',
            'service_involvement': 'serviceInvolvement',
            'lead_practitioner_name': 'leadPractitionerName',
            'lead_practitioner_phone': 'leadPractitionerPhone',
            'lead_practitioner_email': 'leadPractitionerEmail',
            'anti_social_behaviour': 'antiSocialBehaviour',
            'anti_social_behaviour_case_open': 'antiSocialBehaviourCaseOpen',
            'rent_arrears': 'rentArrears',
            'rent_arrears_case_open': 'rentArrearsCaseOpen',
            'notice_seeking_possessions': 'noticeSeekingPossessions',
            'notice_seeking_possessions_case_open': 'noticeSeekingPossessionsCaseOpen',
            'eviction': 'eviction',
            'eviction_case_open': 'evictionCaseOpen'
        }
        self._coverage_start_date = coverage_start_date
        self._coverage_end_date = coverage_end_date
        self._coverage_geographic_area = coverage_geographic_area
        self._service_involvement = service_involvement
        self._lead_practitioner_name = lead_practitioner_name
        self._lead_practitioner_phone = lead_practitioner_phone
        self._lead_practitioner_email = lead_practitioner_email
        self._anti_social_behaviour = anti_social_behaviour
        self._anti_social_behaviour_case_open = anti_social_behaviour_case_open
        self._rent_arrears = rent_arrears
        self._rent_arrears_case_open = rent_arrears_case_open
        self._notice_seeking_possessions = notice_seeking_possessions
        self._notice_seeking_possessions_case_open = notice_seeking_possessions_case_open
        self._eviction = eviction
        self._eviction_case_open = eviction_case_open

    @classmethod
    def from_dict(cls, dikt) -> 'Housing':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Housing of this Housing.  # noqa: E501
        :rtype: Housing
        """
        return util.deserialize_model(dikt, cls)

    @property
    def coverage_start_date(self) -> date:
        """Gets the coverage_start_date of this Housing.


        :return: The coverage_start_date of this Housing.
        :rtype: date
        """
        return self._coverage_start_date

    @coverage_start_date.setter
    def coverage_start_date(self, coverage_start_date: date):
        """Sets the coverage_start_date of this Housing.


        :param coverage_start_date: The coverage_start_date of this Housing.
        :type coverage_start_date: date
        """

        self._coverage_start_date = coverage_start_date

    @property
    def coverage_end_date(self) -> date:
        """Gets the coverage_end_date of this Housing.


        :return: The coverage_end_date of this Housing.
        :rtype: date
        """
        return self._coverage_end_date

    @coverage_end_date.setter
    def coverage_end_date(self, coverage_end_date: date):
        """Sets the coverage_end_date of this Housing.


        :param coverage_end_date: The coverage_end_date of this Housing.
        :type coverage_end_date: date
        """

        self._coverage_end_date = coverage_end_date

    @property
    def coverage_geographic_area(self) -> str:
        """Gets the coverage_geographic_area of this Housing.


        :return: The coverage_geographic_area of this Housing.
        :rtype: str
        """
        return self._coverage_geographic_area

    @coverage_geographic_area.setter
    def coverage_geographic_area(self, coverage_geographic_area: str):
        """Sets the coverage_geographic_area of this Housing.


        :param coverage_geographic_area: The coverage_geographic_area of this Housing.
        :type coverage_geographic_area: str
        """

        self._coverage_geographic_area = coverage_geographic_area

    @property
    def service_involvement(self) -> str:
        """Gets the service_involvement of this Housing.


        :return: The service_involvement of this Housing.
        :rtype: str
        """
        return self._service_involvement

    @service_involvement.setter
    def service_involvement(self, service_involvement: str):
        """Sets the service_involvement of this Housing.


        :param service_involvement: The service_involvement of this Housing.
        :type service_involvement: str
        """

        self._service_involvement = service_involvement

    @property
    def lead_practitioner_name(self) -> str:
        """Gets the lead_practitioner_name of this Housing.


        :return: The lead_practitioner_name of this Housing.
        :rtype: str
        """
        return self._lead_practitioner_name

    @lead_practitioner_name.setter
    def lead_practitioner_name(self, lead_practitioner_name: str):
        """Sets the lead_practitioner_name of this Housing.


        :param lead_practitioner_name: The lead_practitioner_name of this Housing.
        :type lead_practitioner_name: str
        """

        self._lead_practitioner_name = lead_practitioner_name

    @property
    def lead_practitioner_phone(self) -> str:
        """Gets the lead_practitioner_phone of this Housing.


        :return: The lead_practitioner_phone of this Housing.
        :rtype: str
        """
        return self._lead_practitioner_phone

    @lead_practitioner_phone.setter
    def lead_practitioner_phone(self, lead_practitioner_phone: str):
        """Sets the lead_practitioner_phone of this Housing.


        :param lead_practitioner_phone: The lead_practitioner_phone of this Housing.
        :type lead_practitioner_phone: str
        """

        self._lead_practitioner_phone = lead_practitioner_phone

    @property
    def lead_practitioner_email(self) -> str:
        """Gets the lead_practitioner_email of this Housing.


        :return: The lead_practitioner_email of this Housing.
        :rtype: str
        """
        return self._lead_practitioner_email

    @lead_practitioner_email.setter
    def lead_practitioner_email(self, lead_practitioner_email: str):
        """Sets the lead_practitioner_email of this Housing.


        :param lead_practitioner_email: The lead_practitioner_email of this Housing.
        :type lead_practitioner_email: str
        """

        self._lead_practitioner_email = lead_practitioner_email

    @property
    def anti_social_behaviour(self) -> bool:
        """Gets the anti_social_behaviour of this Housing.


        :return: The anti_social_behaviour of this Housing.
        :rtype: bool
        """
        return self._anti_social_behaviour

    @anti_social_behaviour.setter
    def anti_social_behaviour(self, anti_social_behaviour: bool):
        """Sets the anti_social_behaviour of this Housing.


        :param anti_social_behaviour: The anti_social_behaviour of this Housing.
        :type anti_social_behaviour: bool
        """

        self._anti_social_behaviour = anti_social_behaviour

    @property
    def anti_social_behaviour_case_open(self) -> bool:
        """Gets the anti_social_behaviour_case_open of this Housing.


        :return: The anti_social_behaviour_case_open of this Housing.
        :rtype: bool
        """
        return self._anti_social_behaviour_case_open

    @anti_social_behaviour_case_open.setter
    def anti_social_behaviour_case_open(self, anti_social_behaviour_case_open: bool):
        """Sets the anti_social_behaviour_case_open of this Housing.


        :param anti_social_behaviour_case_open: The anti_social_behaviour_case_open of this Housing.
        :type anti_social_behaviour_case_open: bool
        """

        self._anti_social_behaviour_case_open = anti_social_behaviour_case_open

    @property
    def rent_arrears(self) -> bool:
        """Gets the rent_arrears of this Housing.


        :return: The rent_arrears of this Housing.
        :rtype: bool
        """
        return self._rent_arrears

    @rent_arrears.setter
    def rent_arrears(self, rent_arrears: bool):
        """Sets the rent_arrears of this Housing.


        :param rent_arrears: The rent_arrears of this Housing.
        :type rent_arrears: bool
        """

        self._rent_arrears = rent_arrears

    @property
    def rent_arrears_case_open(self) -> bool:
        """Gets the rent_arrears_case_open of this Housing.


        :return: The rent_arrears_case_open of this Housing.
        :rtype: bool
        """
        return self._rent_arrears_case_open

    @rent_arrears_case_open.setter
    def rent_arrears_case_open(self, rent_arrears_case_open: bool):
        """Sets the rent_arrears_case_open of this Housing.


        :param rent_arrears_case_open: The rent_arrears_case_open of this Housing.
        :type rent_arrears_case_open: bool
        """

        self._rent_arrears_case_open = rent_arrears_case_open

    @property
    def notice_seeking_possessions(self) -> bool:
        """Gets the notice_seeking_possessions of this Housing.


        :return: The notice_seeking_possessions of this Housing.
        :rtype: bool
        """
        return self._notice_seeking_possessions

    @notice_seeking_possessions.setter
    def notice_seeking_possessions(self, notice_seeking_possessions: bool):
        """Sets the notice_seeking_possessions of this Housing.


        :param notice_seeking_possessions: The notice_seeking_possessions of this Housing.
        :type notice_seeking_possessions: bool
        """

        self._notice_seeking_possessions = notice_seeking_possessions

    @property
    def notice_seeking_possessions_case_open(self) -> bool:
        """Gets the notice_seeking_possessions_case_open of this Housing.


        :return: The notice_seeking_possessions_case_open of this Housing.
        :rtype: bool
        """
        return self._notice_seeking_possessions_case_open

    @notice_seeking_possessions_case_open.setter
    def notice_seeking_possessions_case_open(self, notice_seeking_possessions_case_open: bool):
        """Sets the notice_seeking_possessions_case_open of this Housing.


        :param notice_seeking_possessions_case_open: The notice_seeking_possessions_case_open of this Housing.
        :type notice_seeking_possessions_case_open: bool
        """

        self._notice_seeking_possessions_case_open = notice_seeking_possessions_case_open

    @property
    def eviction(self) -> bool:
        """Gets the eviction of this Housing.


        :return: The eviction of this Housing.
        :rtype: bool
        """
        return self._eviction

    @eviction.setter
    def eviction(self, eviction: bool):
        """Sets the eviction of this Housing.


        :param eviction: The eviction of this Housing.
        :type eviction: bool
        """

        self._eviction = eviction

    @property
    def eviction_case_open(self) -> bool:
        """Gets the eviction_case_open of this Housing.


        :return: The eviction_case_open of this Housing.
        :rtype: bool
        """
        return self._eviction_case_open

    @eviction_case_open.setter
    def eviction_case_open(self, eviction_case_open: bool):
        """Sets the eviction_case_open of this Housing.


        :param eviction_case_open: The eviction_case_open of this Housing.
        :type eviction_case_open: bool
        """

        self._eviction_case_open = eviction_case_open
