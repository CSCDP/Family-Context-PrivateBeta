/**
 * Family Context
 * This is the API definition for Family Context
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import Person from '../model/Person';

/**
* Person service.
* @module api/PersonApi
* @version 0.0.1
*/
export default class PersonApi {

    /**
    * Constructs a new PersonApi. 
    * @alias module:api/PersonApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Find person by ID
     * Returns a single person
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Person} and HTTP response
     */
    getPersonByIdWithHttpInfo(personId) {
      let postBody = null;

      let pathParams = {
        'personId': personId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['cookieAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Person;

      return this.apiClient.callApi(
        '/person/{personId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * Find person by ID
     * Returns a single person
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Person}
     */
    getPersonById(personId) {
      return this.getPersonByIdWithHttpInfo(personId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }

}
