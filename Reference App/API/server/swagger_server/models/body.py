# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Body(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, userid: str = None, password: str = None):  # noqa: E501
        """Body - a model defined in Swagger

        :param userid: The userid of this Body.  # noqa: E501
        :type userid: str
        :param password: The password of this Body.  # noqa: E501
        :type password: str
        """
        self.swagger_types = {"userid": str, "password": str}

        self.attribute_map = {"userid": "userid", "password": "password"}
        self._userid = userid
        self._password = password

    @classmethod
    def from_dict(cls, dikt) -> "Body":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The body of this Body.  # noqa: E501
        :rtype: Body
        """
        return util.deserialize_model(dikt, cls)

    @property
    def userid(self) -> str:
        """Gets the userid of this Body.


        :return: The userid of this Body.
        :rtype: str
        """
        return self._userid

    @userid.setter
    def userid(self, userid: str):
        """Sets the userid of this Body.


        :param userid: The userid of this Body.
        :type userid: str
        """
        if userid is None:
            raise ValueError(
                "Invalid value for `userid`, must not be `None`"
            )  # noqa: E501

        self._userid = userid

    @property
    def password(self) -> str:
        """Gets the password of this Body.


        :return: The password of this Body.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password: str):
        """Sets the password of this Body.


        :param password: The password of this Body.
        :type password: str
        """
        if password is None:
            raise ValueError(
                "Invalid value for `password`, must not be `None`"
            )  # noqa: E501

        self._password = password
